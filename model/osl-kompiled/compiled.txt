module ARRAY$SYNTAX [org.kframework.attributes.Location(Location(78,1,81,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports ARRAY-CONCRETE$SYNTAX
endmodule


module ARRAY-CONCRETE [concrete() org.kframework.attributes.Location(Location(41,1,48,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports LIST
  imports ARRAY-SYNTAX
  imports ARRAY-CONCRETE$SYNTAX
endmodule


module ARRAY-CONCRETE$SYNTAX [concrete() org.kframework.attributes.Location(Location(41,1,48,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  imports LIST$SYNTAX
  imports ARRAY-SYNTAX$SYNTAX
  syntax Array ::= "makeEmptyArray" "(" Int ")"
  syntax Array ::= "arrayCtor" "(" String "," Int ")"
endmodule


module ARRAY-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(50,1,76,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k)) symbolic()]
  imports MAP$SYNTAX
  imports INT$SYNTAX
  imports ARRAY-SYNTAX$SYNTAX
  syntax Array ::= "array" "(" Map "," Int "," K ")"
endmodule


module ARRAY-SYNTAX [org.kframework.attributes.Location(Location(24,1,39,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports LIST
  imports ARRAY-SYNTAX$SYNTAX
  ModuleComment( Sets a range of indices (given by an index into the array and the number
   of indices to set) to the same value. ,[org.kframework.attributes.Location(Location(34,3,35,43)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
endmodule


module ARRAY-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(24,1,39,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports LIST$SYNTAX
  syntax KItem ::= Array
  syntax K ::= Array "[" Int "]"
  syntax K
  syntax Bool ::= Int "in_keys" "(" Array ")"
  syntax Bool ::= "isArray" "(" K ")"
  syntax Array [element(_[_<-_]) hook(ARRAY.Array) org.kframework.attributes.Location(Location(27,3,27,69)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k)) unit(arrayCtor)]
  syntax Array ::= Array "[" Int "<-" K "]"
  syntax Array ::= Array "[" Int "<-" "undef" "]"
  syntax Array ::= "updateArray" "(" Array "," Int "," List ")"
  syntax Array ::= "makeArray" "(" Int "," K ")"
  syntax Array ::= "fillArray" "(" Array "," Int "," Int "," K ")"
endmodule


module AUTO-CASTS [org.kframework.attributes.Location(Location(155,1,163,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports AUTO-CASTS$SYNTAX
  ModuleComment( this is part of the mechanism that allows concrete user syntax in K,[org.kframework.attributes.Location(Location(162,3,162,73)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(156,3,156,58)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( generates, for all sorts, productions of the form:,[org.kframework.attributes.Location(Location(157,3,157,56)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( Sort  ::= Sort ":Sort",[org.kframework.attributes.Location(Location(159,3,159,28)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( Sort  ::= Sort "::Sort",[org.kframework.attributes.Location(Location(158,3,158,29)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( Sort  ::= K    ":>Sort",[org.kframework.attributes.Location(Location(161,3,161,29)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( KBott ::= Sort "<:Sort",[org.kframework.attributes.Location(Location(160,3,160,29)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
endmodule


module AUTO-CASTS$SYNTAX [org.kframework.attributes.Location(Location(155,1,163,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
endmodule


module AUTO-FOLLOW [org.kframework.attributes.Location(Location(165,1,176,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports AUTO-FOLLOW$SYNTAX
  ModuleComment( syntax K ::= K K,[org.kframework.attributes.Location(Location(172,3,172,22)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "b",[org.kframework.attributes.Location(Location(170,3,170,22)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "ab",[org.kframework.attributes.Location(Location(171,3,171,23)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( syntax K ::= "a",[org.kframework.attributes.Location(Location(169,3,169,22)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( of another terminal. This is useful to prevent ambiguities such as:,[org.kframework.attributes.Location(Location(168,3,168,73)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(166,3,166,58)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( generates a follow restriction for every terminal which is a prefix,[org.kframework.attributes.Location(Location(167,3,167,73)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( because it would turn the terminal into the terminal "ab".,[org.kframework.attributes.Location(Location(175,3,175,64)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( In the above example, the terminal "a" is not allowed to be followed by a "b",[org.kframework.attributes.Location(Location(174,3,174,83)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( #parse("ab", "K"),[org.kframework.attributes.Location(Location(173,3,173,23)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
endmodule


module AUTO-FOLLOW$SYNTAX [org.kframework.attributes.Location(Location(165,1,176,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
endmodule


module BASIC-K [org.kframework.attributes.Location(Location(8,1,14,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports SORT-K
  imports BASIC-K$SYNTAX
endmodule


module BASIC-K$SYNTAX [org.kframework.attributes.Location(Location(8,1,14,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax KLabel [org.kframework.attributes.Location(Location(10,3,10,15)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  syntax KItem [hook(K.KItem) org.kframework.attributes.Location(Location(11,3,11,30)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  syntax KConfigVar [org.kframework.attributes.Location(Location(13,3,13,19)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  syntax K ::= KItem
  syntax K
  syntax Bool ::= "isKLabel" "(" K ")"
  syntax Bool ::= "isKItem" "(" K ")"
  syntax Bool ::= "isKConfigVar" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module BLOCK [org.kframework.attributes.Location(Location(5,1,42,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/block.k))]
  imports OSL-SYNTAX
  imports CONFIGURATION
  imports BLOCK$SYNTAX
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``V~>`#blockend_BLOCK`(.KList)=>`#blockend_BLOCK`(.KList)~>V``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isValue(V) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(18) org.kframework.attributes.Location(Location(18,6,18,44)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/block.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``V~>Ss~>`#blockend_BLOCK`(.KList)=>V~>`#blockend_BLOCK`(.KList)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isValue(V),isStmts(Ss)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(24) org.kframework.attributes.Location(Location(24,6,24,56)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/block.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#block(Ss)=>Ss~>`#blockend_BLOCK`(.KList)``~>DotVar3),`<env>`(ENV),_1,`<stack>`(`_List_`(`.List`(.KList)=>`ListItem`(ENV),DotVar4)),_2,_3,_4,_5),DotVar1)),_6,_7,_8) requires `_andBool_`(isMap(ENV),isStmts(Ss)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(14) org.kframework.attributes.Location(Location(14,6,16,49)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/block.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(`` `unsafe_;_OSL-SYNTAX`(B)=>B~>`#unsafeBlockend_BLOCK`(.KList)``~>DotVar3),_1,_2,_3,_4,_5,`<unsafe-mode>`(FLAG=>#token("true","Bool")),_6),DotVar1)),_7,_8,_9) requires `_andBool_`(isBool(FLAG),isBlock(B)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(36) org.kframework.attributes.Location(Location(36,6,37,52)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/block.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(`` `#unsafeBlockend_BLOCK`(.KList)=>.K``~>DotVar3),_1,_2,_3,_4,_5,`<unsafe-mode>`(FLAG=>#token("false","Bool")),_6),DotVar1)),_7,_8,_9) requires isBool(FLAG) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(39) org.kframework.attributes.Location(Location(39,6,40,53)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/block.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(`` `#blockend_BLOCK`(.KList)=>`#blockend_BLOCK`(.KList)``~>DotVar3),`<env>`(`_Map_`(`_|->_`(X,L),DotVar4)),`<store>`(`_Map_`(`_|->_`(L,_17)=>`.Map`(.KList),DotVar5)),`<stack>`(`_List_`(`ListItem`(X)=>`.List`(.KList),DotVar6)),_1,_2,_3,_4),DotVar1)),_5,_6,_7) requires `_andBool_`(isId(X),isInt(L)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(26) org.kframework.attributes.Location(Location(26,6,29,52)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/block.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(`` `#blockend_BLOCK`(.KList)=>.K``~>DotVar3),`<env>`(_18=>ENV),_1,`<stack>`(`_List_`(`ListItem`(ENV)=>`.List`(.KList),DotVar4)),_2,_3,_4,_5),DotVar1)),_6,_7,_8) requires `_andBool_`(isMap(ENV),isMap(_18)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(31) org.kframework.attributes.Location(Location(31,6,33,55)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/block.k))]
  ModuleComment( { ..., val(newResource()); decl x; ... },[org.kframework.attributes.Location(Location(22,1,22,44)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/block.k))])
  ModuleComment( skip the next statements when we have an early return in a block statement,[org.kframework.attributes.Location(Location(20,1,20,78)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/block.k))])
  ModuleComment( example:,[org.kframework.attributes.Location(Location(21,1,21,12)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/block.k))])
  ModuleComment( The decl x and the rest will be skipped.,[org.kframework.attributes.Location(Location(23,1,23,44)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/block.k))])
endmodule


module BLOCK$SYNTAX [org.kframework.attributes.Location(Location(5,1,42,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/block.k))]
  imports OSL-SYNTAX$SYNTAX
  imports CONFIGURATION$SYNTAX
  syntax KItem ::= BlockItem
  syntax K
  syntax Bool ::= "isBlockItem" "(" K ")"
  syntax BlockItem ::= "#unsafeBlockend"
  syntax BlockItem ::= "#blockend"
endmodule


module BOOL [org.kframework.attributes.Location(Location(268,1,317,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports BOOL-SYNTAX
  imports BOOL$SYNTAX
  imports BASIC-K
  rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(282) org.kframework.attributes.Location(Location(282,8,282,29)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(283) org.kframework.attributes.Location(Location(283,8,283,29)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_xorBool__BOOL`(B1,B2)=>`notBool_`(`_==Bool__BOOL`(B1,B2)) requires `_andBool_`(isBool(B1),isBool(B2)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(298) org.kframework.attributes.Location(Location(298,8,298,57)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_xorBool__BOOL`(B,B)=>#token("false","Bool") requires isBool(B) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(297) org.kframework.attributes.Location(Location(297,8,297,38)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_xorBool__BOOL`(B,#token("false","Bool"))=>B requires isBool(B) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(296) org.kframework.attributes.Location(Location(296,8,296,38)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_xorBool__BOOL`(#token("false","Bool"),B)=>B requires isBool(B) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(295) org.kframework.attributes.Location(Location(295,8,295,38)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_orElseBool__BOOL`(_0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(306) org.kframework.attributes.Location(Location(306,8,306,33)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_orElseBool__BOOL`(K,#token("false","Bool"))=>K requires isK(K) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(308) org.kframework.attributes.Location(Location(308,8,308,33)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_orElseBool__BOOL`(#token("true","Bool"),_3)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(305) org.kframework.attributes.Location(Location(305,8,305,33)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_orElseBool__BOOL`(#token("false","Bool"),K)=>K requires isK(K) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(307) org.kframework.attributes.Location(Location(307,8,307,33)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_orBool__BOOL`(_9,#token("true","Bool"))=>#token("true","Bool") requires isBool(_9) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(301) org.kframework.attributes.Location(Location(301,8,301,34)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_orBool__BOOL`(B,#token("false","Bool"))=>B requires isBool(B) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(303) org.kframework.attributes.Location(Location(303,8,303,32)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_orBool__BOOL`(#token("true","Bool"),_2)=>#token("true","Bool") requires isBool(_2) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(300) org.kframework.attributes.Location(Location(300,8,300,34)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_orBool__BOOL`(#token("false","Bool"),B)=>B requires isBool(B) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(302) org.kframework.attributes.Location(Location(302,8,302,32)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_impliesBool__BOOL`(_6,#token("true","Bool"))=>#token("true","Bool") requires isBool(_6) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(312) org.kframework.attributes.Location(Location(312,8,312,39)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_impliesBool__BOOL`(B,#token("false","Bool"))=>`notBool_`(B) requires isBool(B) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(313) org.kframework.attributes.Location(Location(313,8,313,45)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_impliesBool__BOOL`(#token("true","Bool"),B)=>B requires isBool(B) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(310) org.kframework.attributes.Location(Location(310,8,310,36)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_impliesBool__BOOL`(#token("false","Bool"),_4)=>#token("true","Bool") requires isBool(_4) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(311) org.kframework.attributes.Location(Location(311,8,311,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_andThenBool__BOOL`(_8,#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(293) org.kframework.attributes.Location(Location(293,8,293,36)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_andThenBool__BOOL`(K,#token("true","Bool"))=>K requires isK(K) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(291) org.kframework.attributes.Location(Location(291,8,291,33)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_andThenBool__BOOL`(#token("true","Bool"),K)=>K requires isK(K) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(290) org.kframework.attributes.Location(Location(290,8,290,33)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_andThenBool__BOOL`(#token("false","Bool"),_7)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(292) org.kframework.attributes.Location(Location(292,8,292,36)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_andBool_`(_1,#token("false","Bool"))=>#token("false","Bool") requires isBool(_1) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(288) org.kframework.attributes.Location(Location(288,8,288,37)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_andBool_`(B,#token("true","Bool"))=>B requires isBool(B) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(286) org.kframework.attributes.Location(Location(286,8,286,37)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_andBool_`(#token("true","Bool"),B)=>B requires isBool(B) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(285) org.kframework.attributes.Location(Location(285,8,285,37)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_andBool_`(#token("false","Bool"),_5)=>#token("false","Bool") requires isBool(_5) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(287) org.kframework.attributes.Location(Location(287,8,287,37)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_=/=Bool__BOOL`(B1,B2)=>`notBool_`(`_==Bool__BOOL`(B1,B2)) requires `_andBool_`(isBool(B1),isBool(B2)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(315) org.kframework.attributes.Location(Location(315,8,315,57)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
endmodule


module BOOL$SYNTAX [org.kframework.attributes.Location(Location(268,1,317,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports BOOL-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax priority notBool_ > _andThenBool__BOOL _impliesBool__BOOL _andBool_ _orElseBool__BOOL _orBool__BOOL _xorBool__BOOL > _==Bool__BOOL _=/=Bool__BOOL
  syntax associativity left _xorBool__BOOL
  syntax associativity left _orElseBool__BOOL
  syntax associativity left _orBool__BOOL
  syntax associativity left _impliesBool__BOOL
  syntax associativity left _andThenBool__BOOL
  syntax associativity left _andBool_
  syntax associativity left _==Bool__BOOL _=/=Bool__BOOL
  syntax associativity left _==Bool__BOOL
  syntax associativity left _=/=Bool__BOOL
  syntax Bool ::= K "orElseBool" K
  syntax Bool ::= K "andThenBool" K
  syntax Bool ::= Bool "xorBool" Bool
  syntax Bool ::= Bool "orBool" Bool
  syntax Bool ::= Bool "impliesBool" Bool
  syntax Bool ::= Bool "andBool" Bool
  syntax Bool ::= Bool "==Bool" Bool
  syntax Bool ::= Bool "=/=Bool" Bool
  syntax Bool ::= "notBool" Bool
endmodule


module BOOL-SYNTAX [org.kframework.attributes.Location(Location(262,1,266,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports BOOL-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")"
endmodule


module BOOL-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(262,1,266,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax KItem ::= Bool
  syntax K
  syntax Bool [hook(BOOL.Bool) org.kframework.attributes.Location(Location(263,3,263,31)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax Bool ::= "true"
  syntax Bool ::= "isBool" "(" K ")"
  syntax Bool ::= "false"
endmodule


module BUILTIN-ID-TOKENS [org.kframework.attributes.Location(Location(21,1,24,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module BUILTIN-ID-TOKENS$SYNTAX [org.kframework.attributes.Location(Location(21,1,24,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  syntax KItem ::= Bool
  syntax K
  syntax Bool ::= "is#UpperId" "(" K ")"
  syntax Bool ::= "is#LowerId" "(" K ")"
  syntax #UpperId ::= r"[A-Z][a-zA-Z0-9]*"
  syntax #LowerId ::= r"[a-z][a-zA-Z0-9]*"
endmodule


module CALL [org.kframework.attributes.Location(Location(5,1,73,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  imports OSL-SYNTAX
  imports CONFIGURATION
  imports CALL$SYNTAX
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``V~>`#void_OSL-SYNTAX`(.KList)=>`#void_OSL-SYNTAX`(.KList)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isValue(V) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(31) org.kframework.attributes.Location(Location(31,6,31,31)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#rs(PVal)~>#own(PType)=>#rs(PType)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(`_andBool_`(isProps(PType),isProps(PVal)),`_==K_`(PVal,PType)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(38) org.kframework.attributes.Location(Location(38,6,39,29)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#loc(L)~>#ref(LF,T)=>#ref(L)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(`_andBool_`(isLifetime(LF),isType(T)),isInt(L)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(44) org.kframework.attributes.Location(Location(44,6,44,70)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#FnCall(F,Es)=>#block(#bindParams(Ps,Es,SS))~>T``~>DotVar5),_1,_2,_3,_4,_5,_6,_7),DotVar3)),_8,_9,`<funDefs>`(`_FunDefCellMap_`(`<funDef>`(`<fname>`(F),`<fparams>`(Ps),`<fret>`(T),`<fbody>`(#block(SS))),DotVar1))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isStmts(SS),isExps(Es)),isParameters(Ps)),isType(T)),isId(F)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(25) org.kframework.attributes.Location(Location(25,6,29,27)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(`` `_;_OSL-SYNTAX`(#function(F,Ps,T,B))=>.K``~>DotVar4),_1,_2,_3,_4,_5,_6,_7),DotVar2)),_8,_9,`<funDefs>`(`_FunDefCellMap_`(`.FunDefCellMap`(.KList)=>`<funDef>`(`<fname>`(F),`<fparams>`(Ps),`<fret>`(T),`<fbody>`(B)),DotVar1))) requires `_andBool_`(`_andBool_`(`_andBool_`(isParameters(Ps),isType(T)),isId(F)),isBlock(B)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(11) org.kframework.attributes.Location(Location(11,6,18,17)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(`` `#voidTy_OSL-SYNTAX`(.KList)=>`#void_OSL-SYNTAX`(.KList)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(33) org.kframework.attributes.Location(Location(33,6,33,35)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  rule #bindParams(`_,__OSL-SYNTAX`(#parameter(P,T),Ps),`_,__OSL-SYNTAX`(`newResource(_)_OSL-SYNTAX`(PROPS),Es),SS)=>`___OSL-SYNTAX`(#decl(P),`___OSL-SYNTAX`(#transfer(`newResource(_)_OSL-SYNTAX`(PROPS),P),#bindParams(Ps,Es,SS))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isProps(PROPS),isStmts(SS)),isExps(Es)),isParameters(Ps)),isId(P)),isType(T)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(55) org.kframework.attributes.Location(Location(55,6,56,70)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  rule #bindParams(`_,__OSL-SYNTAX`(#parameter(P,T),Ps),`_,__OSL-SYNTAX`(`*__OSL-SYNTAX`(E),Es),SS)=>`___OSL-SYNTAX`(#decl(P),`___OSL-SYNTAX`(#transfer(`*__OSL-SYNTAX`(E),P),#bindParams(Ps,Es,SS))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isStmts(SS),isExp(E)),isExps(Es)),isParameters(Ps)),isId(P)),isType(T)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(61) org.kframework.attributes.Location(Location(61,6,62,55)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  rule #bindParams(`_,__OSL-SYNTAX`(#parameter(P,T),Ps),`_,__OSL-SYNTAX`(E,Es),SS)=>`___OSL-SYNTAX`(#decl(P),`___OSL-SYNTAX`(#transfer(E,P),#bindParams(Ps,Es,SS))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isStmts(SS),isExps(Es)),isParameters(Ps)),isId(P)),isType(T)),isId(E)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(52) org.kframework.attributes.Location(Location(52,6,53,53)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  rule #bindParams(`_,__OSL-SYNTAX`(#parameter(P,T),Ps),`_,__OSL-SYNTAX`(#read(E),Es),SS)=>`___OSL-SYNTAX`(#decl(P),`___OSL-SYNTAX`(#transfer(#read(E),P),#bindParams(Ps,Es,SS))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isStmts(SS),isExp(E)),isExps(Es)),isParameters(Ps)),isId(P)),isType(T)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(64) org.kframework.attributes.Location(Location(64,6,65,57)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  rule #bindParams(`_,__OSL-SYNTAX`(#parameter(P,T),Ps),`_,__OSL-SYNTAX`(#mutBorrow(E),Es),SS)=>`___OSL-SYNTAX`(#decl(P),`___OSL-SYNTAX`(#mborrow(P,E),#bindParams(Ps,Es,SS))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isStmts(SS),isExp(E)),isExps(Es)),isParameters(Ps)),isId(P)),isType(T)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(49) org.kframework.attributes.Location(Location(49,6,50,50)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  rule #bindParams(`_,__OSL-SYNTAX`(#parameter(P,T),Ps),`_,__OSL-SYNTAX`(#immBorrow(E),Es),SS)=>`___OSL-SYNTAX`(#decl(P),`___OSL-SYNTAX`(#borrow(P,E),#bindParams(Ps,Es,SS))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isStmts(SS),isExp(E)),isExps(Es)),isParameters(Ps)),isId(P)),isType(T)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(46) org.kframework.attributes.Location(Location(46,6,47,49)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  rule #bindParams(`_,__OSL-SYNTAX`(#parameter(P,T),Ps),`_,__OSL-SYNTAX`(#FnCall(F,Es2),Es),SS)=>`___OSL-SYNTAX`(#decl(P),`___OSL-SYNTAX`(#transfer(#FnCall(F,Es2),P),#bindParams(Ps,Es,SS))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isExps(Es2),isStmts(SS)),isExps(Es)),isParameters(Ps)),isId(P)),isType(T)),isId(F)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(58) org.kframework.attributes.Location(Location(58,6,59,64)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  rule #bindParams(`.List{"_,__OSL-SYNTAX"}`(.KList),`.List{"_,__OSL-SYNTAX"}`(.KList),SS)=>SS requires isStmts(SS) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(70) org.kframework.attributes.Location(Location(70,6,70,53)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  ModuleComment(rule #bindParams((P:Id : T:Type, Ps:Parameters), (E:Exp, Es:Exps), SS:Stmts) =>,[org.kframework.attributes.Location(Location(67,1,67,82)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))])
  ModuleComment( which should be use by the transfers rules: Transfer #ref X,[org.kframework.attributes.Location(Location(43,1,43,63)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))])
  ModuleComment( as the same props than the returned type.,[org.kframework.attributes.Location(Location(37,1,37,45)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))])
  ModuleComment( When the function return a reference,[org.kframework.attributes.Location(Location(41,1,41,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))])
  ModuleComment( We verify that the returned value,[org.kframework.attributes.Location(Location(36,1,36,37)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))])
  ModuleComment( We got the location referenced and return a #ref(Loc),[org.kframework.attributes.Location(Location(42,1,42,57)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))])
  ModuleComment( Return statement,[org.kframework.attributes.Location(Location(35,1,35,20)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))])
  ModuleComment(     decl P; transfer E P ; #bindParams(Ps, Es, SS),[org.kframework.attributes.Location(Location(68,1,68,54)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))])
endmodule


module CALL$SYNTAX [org.kframework.attributes.Location(Location(5,1,73,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/call.k))]
  imports OSL-SYNTAX$SYNTAX
  imports CONFIGURATION$SYNTAX
  syntax Stmts ::= "#bindParams" "(" K "," K "," K ")"
endmodule


module COLLECTIONS [org.kframework.attributes.Location(Location(252,1,260,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports SET
  imports MAP
  imports LIST
  imports COLLECTIONS$SYNTAX
endmodule


module COLLECTIONS$SYNTAX [org.kframework.attributes.Location(Location(252,1,260,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports MAP$SYNTAX
  imports LIST$SYNTAX
  syntax Set ::= "List2Set" "(" List ")"
  syntax List ::= "Set2List" "(" Set ")"
endmodule


module CONFIG-CELLS [org.kframework.attributes.Location(Location(112,1,126,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports RULE-LISTS
  imports KCELLS
  imports CONFIG-CELLS$SYNTAX
endmodule


module CONFIG-CELLS$SYNTAX [org.kframework.attributes.Location(Location(112,1,126,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  imports KCELLS$SYNTAX
  syntax K
  syntax Cell ::= "<" #CellName #CellProperties ">" K "</" #CellName ">"
  syntax Cell ::= "<" #CellName "/>"
  syntax Bool ::= "is#CellProperty" "(" K ")"
  syntax Bool ::= "is#CellProperties" "(" K ")"
  syntax Bool ::= "is#CellName" "(" K ")"
  syntax #CellProperty ::= #CellName "=" KString
  syntax #CellProperties ::= #CellProperty #CellProperties
  syntax #CellProperties ::= ""
  syntax #CellName ::= r"[a-zA-Z][a-zA-Z0-9\\-]*"
  syntax #CellName ::= #UpperId
  syntax #CellName ::= #LowerId
endmodule


module CONFIGURATION [org.kframework.attributes.Location(Location(4,1,47,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/configuration.k))]
  imports OSL-SYNTAX
  imports MAP
  imports CONFIGURATION$SYNTAX
  syntax KItem ::= Cell
  syntax K
  syntax Cell ::= WriteCell
  syntax Cell ::= UnsafeModeCell
  syntax Cell ::= TmpCell
  syntax Cell ::= TimerCell
  syntax Cell ::= TCell
  syntax Cell ::= StoreCell
  syntax Cell ::= StatesCell
  syntax Cell ::= StateCell
  syntax Cell ::= StackCell
  syntax Cell ::= NstateCell
  syntax Cell ::= KCell
  syntax Cell ::= IndexesCell
  syntax Cell ::= IndexCell
  syntax Cell ::= FunDefsCell
  syntax Cell ::= FunDefCell
  syntax Cell ::= FretCell
  syntax Cell ::= FparamsCell
  syntax Cell ::= FnameCell
  syntax Cell ::= FbodyCell
  syntax Cell ::= EnvCell
  syntax Bool ::= "isCell" "(" K ")"
  rule initWriteCell(.KList)=>`<write>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initUnsafeModeCell(.KList)=>`<unsafe-mode>`(#token("false","Bool")) requires isBool(#token("false","Bool")) ensures #token("true","Bool") [initializer()]
  rule initTmpCell(.KList)=>`<tmp>`(`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initTimerCell(.KList)=>`<timer>`(#token("0","Int")) requires isInt(#token("0","Int")) ensures #token("true","Bool") [initializer()]
  rule initTCell(Init)=>`<T>`(initStatesCell(Init),initNstateCell(.KList),initTmpCell(.KList),initFunDefsCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initStoreCell(.KList)=>`<store>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initStatesCell(Init)=>`<states>`(initStateCell(Init)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initStateCell(Init)=>`<state>`(initIndexCell(.KList),initKCell(Init),initEnvCell(.KList),initStoreCell(.KList),initStackCell(.KList),initWriteCell(.KList),initTimerCell(.KList),initUnsafeModeCell(.KList),initIndexesCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initStackCell(.KList)=>`<stack>`(`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initNstateCell(.KList)=>`<nstate>`(#token("1","Int")) requires isInt(#token("1","Int")) ensures #token("true","Bool") [initializer()]
  rule initKCell(Init)=>`<k>`(`Map:lookup`(Init,#token("$PGM","KConfigVar"))) requires isStmts(`Map:lookup`(Init,#token("$PGM","KConfigVar"))) ensures #token("true","Bool") [initializer()]
  rule initIndexesCell(.KList)=>`<indexes>`(#indexes(#token("0","Int"),#token("0","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initIndexCell(.KList)=>`<index>`(#token("0","Int")) requires isInt(#token("0","Int")) ensures #token("true","Bool") [initializer()]
  rule initFunDefsCell(.KList)=>`<funDefs>`(`.FunDefCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFunDefCell(.KList)=>`<funDef>`(initFnameCell(.KList),initFparamsCell(.KList),initFretCell(.KList),initFbodyCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFretCell(.KList)=>`<fret>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFparamsCell(.KList)=>`<fparams>`(`.List{"_,__OSL-SYNTAX"}`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFnameCell(.KList)=>`<fname>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initFbodyCell(.KList)=>`<fbody>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule initEnvCell(.KList)=>`<env>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_4,`<k>`(.K),_5,_6,_7,_8,_9,_10,_11),DotVar2)),`<nstate>`(#token("1","Int")),DotVar0,`<funDefs>`(`_FunDefCellMap_`(`<funDef>`(_0,_1,_2,_3)=>`.FunDefCellMap`(.KList),DotVar1))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(#token("true","Bool"),isFnameCell(_0)),isFbodyCell(_3)),isFparamsCell(_1)),isFretCell(_2)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(44) org.kframework.attributes.Location(Location(44,8,46,67)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/configuration.k))]
  ModuleComment( Clear the function definition after the end of the program,[org.kframework.attributes.Location(Location(43,1,43,62)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/configuration.k))])
endmodule


module CONFIGURATION$SYNTAX [org.kframework.attributes.Location(Location(4,1,47,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/configuration.k))]
  imports OSL-SYNTAX$SYNTAX
  imports MAP$SYNTAX
  syntax WriteCellOpt ::= WriteCell
  syntax WriteCellOpt ::= "noWriteCell"
  syntax WriteCell ::= "initWriteCell"
  syntax WriteCell ::= "<write>" Set "</write>"
  syntax UnsafeModeCellOpt ::= UnsafeModeCell
  syntax UnsafeModeCellOpt ::= "noUnsafeModeCell"
  syntax UnsafeModeCell ::= "initUnsafeModeCell"
  syntax UnsafeModeCell ::= "<unsafe-mode>" Bool "</unsafe-mode>"
  syntax TmpCellOpt ::= TmpCell
  syntax TmpCellOpt ::= "noTmpCell"
  syntax TmpCell ::= "initTmpCell"
  syntax TmpCell ::= "<tmp>" List "</tmp>"
  syntax TimerCellOpt ::= TimerCell
  syntax TimerCellOpt ::= "noTimerCell"
  syntax TimerCell ::= "initTimerCell"
  syntax TimerCell ::= "<timer>" Int "</timer>"
  syntax TCellFragment ::= "<T>-fragment" StatesCellOpt NstateCellOpt TmpCellOpt FunDefsCellOpt "</T>-fragment"
  syntax TCell ::= "initTCell" "(" Map ")"
  syntax TCell ::= "<T>" StatesCell NstateCell TmpCell FunDefsCell "</T>"
  syntax StoreCellOpt ::= StoreCell
  syntax StoreCellOpt ::= "noStoreCell"
  syntax StoreCell ::= "initStoreCell"
  syntax StoreCell ::= "<store>" Map "</store>"
  syntax StatesCellOpt ::= StatesCell
  syntax StatesCellOpt ::= "noStatesCell"
  syntax StatesCellFragment ::= "<states>-fragment" StateCellMap "</states>-fragment"
  syntax StatesCell ::= "initStatesCell" "(" Map ")"
  syntax StatesCell ::= "<states>" StateCellMap "</states>"
  syntax StateCellMap [hook(MAP.Map)]
  syntax StateCellMap ::= StateCellMap StateCellMap
  syntax StateCellMap ::= StateCell
  syntax StateCellMap ::= "StateCellMapItem" "(" IndexCell "," StateCell ")"
  syntax StateCellMap ::= ".StateCellMap"
  syntax StateCellFragment ::= "<state>-fragment" IndexCellOpt KCellOpt EnvCellOpt StoreCellOpt StackCellOpt WriteCellOpt TimerCellOpt UnsafeModeCellOpt IndexesCellOpt "</state>-fragment"
  syntax StateCell ::= "initStateCell" "(" Map ")"
  syntax StateCell ::= "<state>" IndexCell KCell EnvCell StoreCell StackCell WriteCell TimerCell UnsafeModeCell IndexesCell "</state>"
  syntax StackCellOpt ::= StackCell
  syntax StackCellOpt ::= "noStackCell"
  syntax StackCell ::= "initStackCell"
  syntax StackCell ::= "<stack>" List "</stack>"
  syntax NstateCellOpt ::= NstateCell
  syntax NstateCellOpt ::= "noNstateCell"
  syntax NstateCell ::= "initNstateCell"
  syntax NstateCell ::= "<nstate>" Int "</nstate>"
  syntax KResult ::= Value
  syntax KItem ::= WriteCellOpt
  syntax KItem ::= WriteCell
  syntax KItem ::= UnsafeModeCellOpt
  syntax KItem ::= UnsafeModeCell
  syntax KItem ::= TmpCellOpt
  syntax KItem ::= TmpCell
  syntax KItem ::= TimerCellOpt
  syntax KItem ::= TimerCell
  syntax KItem ::= TCellFragment
  syntax KItem ::= TCell
  syntax KItem ::= StoreCellOpt
  syntax KItem ::= StoreCell
  syntax KItem ::= StatesCellOpt
  syntax KItem ::= StatesCellFragment
  syntax KItem ::= StatesCell
  syntax KItem ::= StateCellMap
  syntax KItem ::= StateCellFragment
  syntax KItem ::= StateCell
  syntax KItem ::= StackCellOpt
  syntax KItem ::= StackCell
  syntax KItem ::= NstateCellOpt
  syntax KItem ::= NstateCell
  syntax KItem ::= KResult
  syntax KItem ::= KCellOpt
  syntax KItem ::= KCell
  syntax KItem ::= IndexesCellOpt
  syntax KItem ::= IndexesCell
  syntax KItem ::= Indexes
  syntax KItem ::= IndexCellOpt
  syntax KItem ::= IndexCell
  syntax KItem ::= FunDefsCellOpt
  syntax KItem ::= FunDefsCellFragment
  syntax KItem ::= FunDefsCell
  syntax KItem ::= FunDefCellMap
  syntax KItem ::= FunDefCellFragment
  syntax KItem ::= FunDefCell
  syntax KItem ::= FretCellOpt
  syntax KItem ::= FretCell
  syntax KItem ::= FparamsCellOpt
  syntax KItem ::= FparamsCell
  syntax KItem ::= FnameCellOpt
  syntax KItem ::= FnameCell
  syntax KItem ::= FbodyCellOpt
  syntax KItem ::= FbodyCell
  syntax KItem ::= EnvCellOpt
  syntax KItem ::= EnvCell
  syntax KCellOpt ::= KCell
  syntax KCellOpt ::= "noKCell"
  syntax KCell ::= "initKCell" "(" Map ")"
  syntax KCell ::= "<k>" K "</k>"
  syntax K
  syntax IndexesCellOpt ::= IndexesCell
  syntax IndexesCellOpt ::= "noIndexesCell"
  syntax IndexesCell ::= "initIndexesCell"
  syntax IndexesCell ::= "<indexes>" Indexes "</indexes>"
  syntax Indexes ::= "#indexes" "(" Int "," Int ")"
  syntax IndexCellOpt ::= IndexCell
  syntax IndexCellOpt ::= "noIndexCell"
  syntax IndexCell ::= "initIndexCell"
  syntax IndexCell ::= "<index>" Int "</index>"
  syntax FunDefsCellOpt ::= FunDefsCell
  syntax FunDefsCellOpt ::= "noFunDefsCell"
  syntax FunDefsCellFragment ::= "<funDefs>-fragment" FunDefCellMap "</funDefs>-fragment"
  syntax FunDefsCell ::= "initFunDefsCell"
  syntax FunDefsCell ::= "<funDefs>" FunDefCellMap "</funDefs>"
  syntax FunDefCellMap [hook(MAP.Map)]
  syntax FunDefCellMap ::= FunDefCellMap FunDefCellMap
  syntax FunDefCellMap ::= FunDefCell
  syntax FunDefCellMap ::= "FunDefCellMapItem" "(" FnameCell "," FunDefCell ")"
  syntax FunDefCellMap ::= ".FunDefCellMap"
  syntax FunDefCellFragment ::= "<funDef>-fragment" FnameCellOpt FparamsCellOpt FretCellOpt FbodyCellOpt "</funDef>-fragment"
  syntax FunDefCell ::= "initFunDefCell"
  syntax FunDefCell ::= "<funDef>" FnameCell FparamsCell FretCell FbodyCell "</funDef>"
  syntax FretCellOpt ::= FretCell
  syntax FretCellOpt ::= "noFretCell"
  syntax FretCell ::= "initFretCell"
  syntax FretCell ::= "<fret>" K "</fret>"
  syntax FparamsCellOpt ::= FparamsCell
  syntax FparamsCellOpt ::= "noFparamsCell"
  syntax FparamsCell ::= "initFparamsCell"
  syntax FparamsCell ::= "<fparams>" Parameters "</fparams>"
  syntax FnameCellOpt ::= FnameCell
  syntax FnameCellOpt ::= "noFnameCell"
  syntax FnameCell ::= "initFnameCell"
  syntax FnameCell ::= "<fname>" K "</fname>"
  syntax FbodyCellOpt ::= FbodyCell
  syntax FbodyCellOpt ::= "noFbodyCell"
  syntax FbodyCell ::= "initFbodyCell"
  syntax FbodyCell ::= "<fbody>" K "</fbody>"
  syntax EnvCellOpt ::= EnvCell
  syntax EnvCellOpt ::= "noEnvCell"
  syntax EnvCell ::= "initEnvCell"
  syntax EnvCell ::= "<env>" Map "</env>"
  syntax Bool ::= "isWriteCellOpt" "(" K ")"
  syntax Bool ::= "isWriteCell" "(" K ")"
  syntax Bool ::= "isUnsafeModeCellOpt" "(" K ")"
  syntax Bool ::= "isUnsafeModeCell" "(" K ")"
  syntax Bool ::= "isTmpCellOpt" "(" K ")"
  syntax Bool ::= "isTmpCell" "(" K ")"
  syntax Bool ::= "isTimerCellOpt" "(" K ")"
  syntax Bool ::= "isTimerCell" "(" K ")"
  syntax Bool ::= "isTCellFragment" "(" K ")"
  syntax Bool ::= "isTCell" "(" K ")"
  syntax Bool ::= "isStoreCellOpt" "(" K ")"
  syntax Bool ::= "isStoreCell" "(" K ")"
  syntax Bool ::= "isStatesCellOpt" "(" K ")"
  syntax Bool ::= "isStatesCellFragment" "(" K ")"
  syntax Bool ::= "isStatesCell" "(" K ")"
  syntax Bool ::= "isStateCellMap" "(" K ")"
  syntax Bool ::= "isStateCellFragment" "(" K ")"
  syntax Bool ::= "isStateCell" "(" K ")"
  syntax Bool ::= "isStackCellOpt" "(" K ")"
  syntax Bool ::= "isStackCell" "(" K ")"
  syntax Bool ::= "isNstateCellOpt" "(" K ")"
  syntax Bool ::= "isNstateCell" "(" K ")"
  syntax Bool ::= "isKResult" "(" K ")"
  syntax Bool ::= "isKCellOpt" "(" K ")"
  syntax Bool ::= "isKCell" "(" K ")"
  syntax Bool ::= "isIndexesCellOpt" "(" K ")"
  syntax Bool ::= "isIndexesCell" "(" K ")"
  syntax Bool ::= "isIndexes" "(" K ")"
  syntax Bool ::= "isIndexCellOpt" "(" K ")"
  syntax Bool ::= "isIndexCell" "(" K ")"
  syntax Bool ::= "isFunDefsCellOpt" "(" K ")"
  syntax Bool ::= "isFunDefsCellFragment" "(" K ")"
  syntax Bool ::= "isFunDefsCell" "(" K ")"
  syntax Bool ::= "isFunDefCellMap" "(" K ")"
  syntax Bool ::= "isFunDefCellFragment" "(" K ")"
  syntax Bool ::= "isFunDefCell" "(" K ")"
  syntax Bool ::= "isFretCellOpt" "(" K ")"
  syntax Bool ::= "isFretCell" "(" K ")"
  syntax Bool ::= "isFparamsCellOpt" "(" K ")"
  syntax Bool ::= "isFparamsCell" "(" K ")"
  syntax Bool ::= "isFnameCellOpt" "(" K ")"
  syntax Bool ::= "isFnameCell" "(" K ")"
  syntax Bool ::= "isFbodyCellOpt" "(" K ")"
  syntax Bool ::= "isFbodyCell" "(" K ")"
  syntax Bool ::= "isEnvCellOpt" "(" K ")"
  syntax Bool ::= "isEnvCell" "(" K ")"
  Bubble(config,<T>
    <states>
     <state multiplicity="*" type="Map">
     	<index> 0:Int </index>
	<k> $PGM:Stmts </k>
     	<env> .Map </env>
     	<store> .Map </store>
	<stack> .List  </stack>
	<write> .Set </write>
	<timer> 0:Int </timer>
       <unsafe-mode> false:Bool </unsafe-mode>
     	<indexes> #indexes(0,0) </indexes>
     </state>
    </states>     
     <nstate> 1:Int </nstate>
     <tmp> .List </tmp>     
     <funDefs>    
       <funDef multiplicity="*" type="Map">
	<fname> .K </fname>
	<fparams> .Parameters </fparams>
	<fret> .K </fret>
	<fbody> .K </fbody> 
       </funDef>
     </funDefs>
</T>,[contentStartColumn(1) contentStartLine(16) org.kframework.attributes.Location(Location(14,1,40,4)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/configuration.k))])
endmodule


module CONFIGURATION-PRIMITIVES [org.kframework.attributes.Location(Location(1120,1,1122,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports CONFIGURATION-PRIMITIVES$SYNTAX
  syntax K
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module CONFIGURATION-PRIMITIVES$SYNTAX [org.kframework.attributes.Location(Location(1120,1,1122,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax KItem ::= Bool
  syntax K ::= "#RESTORE_CONFIGURATION" "(" K ")"
  syntax K
  syntax Bool ::= "isK" "(" K ")"
endmodule


module CONTROL [org.kframework.attributes.Location(Location(5,1,151,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  imports OSL-SYNTAX
  imports CONTROL$SYNTAX
  imports CONFIGURATION
  imports BLOCK
  rule `<T>`(`<states>`(`_StateCellMap_`(`_StateCellMap_`(`<state>`(_0,`<k>`(#loopSep(I)~>Rest=>Rest),_1,`<store>`(STORE),_2,_3,_4,_5,_6),`<state>`(_7,`<k>`(#loopEnd(I2)),_8,`<store>`(STORE2),_9,_10,_11,_12,_13)=>`.StateCellMap`(.KList)),DotVar1)),`<nstate>`(NS=>`_-Int__INT`(NS,#token("1","Int"))),_14,_15) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(NS),isInt(I)),isK(Rest)),isInt(I2)),isMap(STORE)),isMap(STORE2)),`_andBool_`(`_==Bool__BOOL`(#IsMoveOccurred(STORE,STORE2),#token("true","Bool")),`_==Int_`(I,I2))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(120) org.kframework.attributes.Location(Location(120,6,131,80)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`_StateCellMap_`(`.StateCellMap`(.KList)=>`<state>`(`<index>`(NS),`<k>`(B~>Rest),`<env>`(ENV),`<store>`(STORE),`<stack>`(STACK),`<write>`(WRITE),`<timer>`(TIMER),`<unsafe-mode>`(UNSAFE),`<indexes>`(#indexes(A,C))),`<state>`(DotVar2,`<k>`(#secondBranch(`_,__OSL-SYNTAX`(B,Bs))~>Rest=>#secondBranch(Bs)~>Rest),`<env>`(ENV),`<store>`(STORE),`<stack>`(STACK),`<write>`(WRITE),`<timer>`(TIMER),`<unsafe-mode>`(UNSAFE),`<indexes>`(#indexes(A,C)))),DotVar1)),`<nstate>`(NS=>`_+Int__INT`(NS,#token("1","Int"))),_0,_1) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isBlocks(Bs),isInt(A)),isInt(TIMER)),isSet(WRITE)),isList(STACK)),isInt(NS)),isInt(C)),isMap(ENV)),isBool(UNSAFE)),isK(Rest)),isMap(STORE)),isBlock(B)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(21) org.kframework.attributes.Location(Location(21,6,42,7)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`_StateCellMap_`(`.StateCellMap`(.KList)=>`<state>`(`<index>`(NS),`<k>`(#evaluate(B)~>#loopEnd(NS)),`<env>`(ENV),`<store>`(STORE),`<stack>`(STACK),`<write>`(WRITE),`<timer>`(TIMER),`<unsafe-mode>`(UNSAFE_BLOCK),`<indexes>`(#indexes(A,C))),`<state>`(DotVar2,`<k>`(#repeat(B)~>Rest=>#loopSep(NS)~>B~>Rest),`<env>`(ENV),`<store>`(STORE),`<stack>`(STACK),`<write>`(WRITE),`<timer>`(TIMER),`<unsafe-mode>`(UNSAFE_BLOCK),`<indexes>`(#indexes(A,C)))),DotVar1)),`<nstate>`(NS=>`_+Int__INT`(NS,#token("1","Int"))),_0,_1) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(TIMER),isSet(WRITE)),isInt(A)),isList(STACK)),isBool(UNSAFE_BLOCK)),isInt(NS)),isInt(C)),isMap(ENV)),isK(Rest)),isMap(STORE)),isBlock(B)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(82) org.kframework.attributes.Location(Location(82,6,106,7)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``V~>Rest~>#loopEnd(I)=>#loopEnd(I)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(`_andBool_`(isValue(V),isInt(I)),isStmts(Rest)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(135) org.kframework.attributes.Location(Location(135,6,135,57)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#secondBranch(`.List{"_,__OSL-SYNTAX"}`(.KList))=>B``~>DotVar4),_1,_2,_3,_4,_5,_6,_7),DotVar2)),_8,`<tmp>`(`_List_`(`ListItem`(B)=>`.List`(.KList),DotVar1)),_9) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(18) org.kframework.attributes.Location(Location(18,6,19,43)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#evaluate(#block(Ss))=>Ss``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isStmts(Ss) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(109) org.kframework.attributes.Location(Location(109,6,109,39)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#branch(`_,__OSL-SYNTAX`(B,Bs))=>#secondBranch(Bs)``~>DotVar4),_1,_2,_3,_4,_5,_6,_7),DotVar2)),_8,`<tmp>`(`_List_`(`.List`(.KList)=>`ListItem`(B),DotVar1)),_9) requires `_andBool_`(isBlocks(Bs),isBlock(B)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(14) org.kframework.attributes.Location(Location(14,6,15,43)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#branch(B,Bs)=>#secondBranch(Bs)~>B``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isBlocks(Bs),isBlock(B)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(12) org.kframework.attributes.Location(Location(12,6,12,59)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(.K),_1,_2,_3,_4,_5,_6,_7)=>`.StateCellMap`(.KList),DotVar1)),`<nstate>`(NS=>`_-Int__INT`(NS,#token("1","Int"))),_8,_9) requires `_andBool_`(isInt(NS),`_=/=Int__INT`(NS,#token("1","Int"))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(45) org.kframework.attributes.Location(Location(45,6,54,26)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule #IsMoved(Key,#rs(P1),#rs(P2))=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_andBool_`(isProps(P1),isProps(P2)),isInt(Key)),`_==K_`(P1,P2)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(145) org.kframework.attributes.Location(Location(145,6,146,24)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule #IsMoved(Key,#rs(P),`#uninit_OSL-SYNTAX`(.KList))=>#token("false","Bool") requires `_andBool_`(isProps(P),isInt(Key)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(148) org.kframework.attributes.Location(Location(148,6,148,45)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule #IsMoved(Key,#rs(P),#br(_19,_20,_21))=>#token("false","Bool") requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isExp(_21),isInt(_20)),isProps(P)),isInt(Key)),isInt(_19)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(149) org.kframework.attributes.Location(Location(149,6,149,48)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule #IsMoveOccurred(`_Map_`(`_|->_`(Key,`#uninit_OSL-SYNTAX`(.KList)),M),M2)=>`_andBool_`(#token("true","Bool"),#IsMoveOccurred(M,M2)) requires `_andBool_`(`_andBool_`(isMap(M2),isInt(Key)),isMap(M)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(141) org.kframework.attributes.Location(Location(141,6,141,92)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule #IsMoveOccurred(`_Map_`(`_|->_`(Key,#rs(Props)),M),M2)=>`_andBool_`(#IsMoved(Key,#rs(Props),`Map:lookup`(M2,Key)),#IsMoveOccurred(M,M2)) requires `_andBool_`(`_andBool_`(`_andBool_`(isMap(M2),isInt(Key)),isMap(M)),isProps(Props)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(138) org.kframework.attributes.Location(Location(138,6,138,125)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule #IsMoveOccurred(`_Map_`(`_|->_`(Key,#br(_22,_23,_24)),M),M2)=>`_andBool_`(#token("true","Bool"),#IsMoveOccurred(M,M2)) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(_22),isMap(M2)),isExp(_24)),isInt(Key)),isInt(_23)),isMap(M)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(142) org.kframework.attributes.Location(Location(142,6,142,95)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  rule #IsMoveOccurred(`.Map`(.KList),M2)=>#token("true","Bool") requires isMap(M2) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(143) org.kframework.attributes.Location(Location(143,6,143,39)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  ModuleComment(,[org.kframework.attributes.Location(Location(80,1,80,3)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment(,[org.kframework.attributes.Location(Location(75,1,75,3)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment(,[org.kframework.attributes.Location(Location(74,1,74,3)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment(,[org.kframework.attributes.Location(Location(65,1,65,3)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( },[org.kframework.attributes.Location(Location(71,1,71,5)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( without polluting the main context.,[org.kframework.attributes.Location(Location(92,6,92,44)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( sound execution,[org.kframework.attributes.Location(Location(49,20,49,38)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( skip this check if the resource is uninit or a reference,[org.kframework.attributes.Location(Location(140,1,140,60)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( loop {,[org.kframework.attributes.Location(Location(68,1,68,10)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( let x = P(4);,[org.kframework.attributes.Location(Location(67,1,67,17)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( for the next iteration. This Rust example illustrate the error:,[org.kframework.attributes.Location(Location(64,1,64,67)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( for evaluating the block of the loop without,[org.kframework.attributes.Location(Location(91,6,91,53)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( evaluate the block of the loop,[org.kframework.attributes.Location(Location(108,1,108,34)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( because using the <index> raise a compiler error.,[org.kframework.attributes.Location(Location(118,1,118,53)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( are still the owner of their resource by comparing the Value.,[org.kframework.attributes.Location(Location(79,1,79,65)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( ```,[org.kframework.attributes.Location(Location(72,1,72,7)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( ```,[org.kframework.attributes.Location(Location(66,1,66,7)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( We have to compare the I:Int tag in requires,[org.kframework.attributes.Location(Location(117,1,117,48)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( We can now compare the two Store and verify the property above.,[org.kframework.attributes.Location(Location(112,1,112,67)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( Then we verify that each owner in the main <Store>,[org.kframework.attributes.Location(Location(78,1,78,54)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( The block of the loop has been evaluated.,[org.kframework.attributes.Location(Location(111,1,111,45)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( The Ints represent the Id of the two states to compare,[org.kframework.attributes.Location(Location(57,26,57,83)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( TODO: maybe a better way to deal with this problem.,[org.kframework.attributes.Location(Location(134,1,134,55)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( Remove a state that has been correctly executed.,[org.kframework.attributes.Location(Location(44,1,44,52)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( Proposition: All owners keep the own of their resource after a loop iteration.,[org.kframework.attributes.Location(Location(62,1,62,82)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( NOTE: If the resource has the prop Copy, then the transfer is possible.,[org.kframework.attributes.Location(Location(81,1,81,75)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( If a resource is moved(transfered)/deallocate in previous iteration of loop, it become not available,[org.kframework.attributes.Location(Location(63,1,63,104)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( For checking this property, we proceed like this:,[org.kframework.attributes.Location(Location(76,1,76,53)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( First, we evaluate the loop in another <State>.,[org.kframework.attributes.Location(Location(77,1,77,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( Create a new state with a copy of the current context,[org.kframework.attributes.Location(Location(90,6,90,62)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( Compiler Error: The value is use of moved value: `x`,[org.kframework.attributes.Location(Location(73,1,73,56)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( Check if the owner has still the owner of his resource after the evaluation of the loop,[org.kframework.attributes.Location(Location(137,1,137,91)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( Case of return in the loop.,[org.kframework.attributes.Location(Location(133,1,133,31)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment( A variable has been moved and will be use in the next loop iteration.,[org.kframework.attributes.Location(Location(147,1,147,73)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment(   let y = x;,[org.kframework.attributes.Location(Location(69,1,69,16)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
  ModuleComment(       ^^^^^^^ Value moved here, in previous iteration of loop,[org.kframework.attributes.Location(Location(70,1,70,65)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))])
endmodule


module CONTROL$SYNTAX [org.kframework.attributes.Location(Location(5,1,151,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/control.k))]
  imports OSL-SYNTAX$SYNTAX
  imports CONFIGURATION$SYNTAX
  imports BLOCK$SYNTAX
  syntax Separator ::= "#loopSep" "(" Int ")"
  syntax Separator ::= "#loopEnd" "(" Int ")"
  syntax Separator ::= "#evaluate" "(" Block ")"
  syntax KItem ::= Separator
  syntax K
  syntax Bool ::= "isSeparator" "(" K ")"
  syntax Bool ::= "#IsMoved" "(" Int "," K "," K ")"
  syntax Bool ::= "#IsMoveOccurred" "(" Map "," Map ")"
endmodule


module DOMAINS [org.kframework.attributes.Location(Location(11,1,22,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING
  imports SET
  imports MAP
  imports LIST
  imports K-REFLECTION
  imports K-IO
  imports INT
  imports DOMAINS-SYNTAX
  imports DOMAINS$SYNTAX
  imports BOOL
  imports BASIC-K
endmodule


module DOMAINS$SYNTAX [org.kframework.attributes.Location(Location(11,1,22,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports SET$SYNTAX
  imports MAP$SYNTAX
  imports LIST$SYNTAX
  imports K-REFLECTION$SYNTAX
  imports K-IO$SYNTAX
  imports INT$SYNTAX
  imports DOMAINS-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  imports BASIC-K$SYNTAX
endmodule


module DOMAINS-SYNTAX [org.kframework.attributes.Location(Location(4,1,9,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX
  imports STRING-SYNTAX
  imports ID
  imports DOMAINS-SYNTAX$SYNTAX
  imports BOOL-SYNTAX
endmodule


module DOMAINS-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(4,1,9,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  imports STRING-SYNTAX$SYNTAX
  imports ID$SYNTAX
  imports BOOL-SYNTAX$SYNTAX
endmodule


module FLOAT$SYNTAX [org.kframework.attributes.Location(Location(397,1,462,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports FLOAT-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  syntax priority --Float__FLOAT > _^Float__FLOAT > _*Float__FLOAT _/Float__FLOAT _%Float__FLOAT > _+Float__FLOAT _-Float__FLOAT
  syntax associativity left _^Float__FLOAT
  syntax associativity left _>Float__FLOAT
  syntax associativity left _>=Float__FLOAT
  syntax associativity left _==Float_
  syntax associativity left _=/=Float__FLOAT
  syntax associativity left _<Float__FLOAT
  syntax associativity left _<=Float__FLOAT
  syntax associativity left _/Float__FLOAT
  syntax associativity left _-Float__FLOAT
  syntax associativity left _+Float__FLOAT _-Float__FLOAT
  syntax associativity left _+Float__FLOAT
  syntax associativity left _*Float__FLOAT _/Float__FLOAT _%Float__FLOAT
  syntax associativity left _*Float__FLOAT
  syntax associativity left _%Float__FLOAT
  syntax MInt ::= "significandFloat" "(" Float ")"
  syntax KItem ::= MInt
  syntax K
  syntax Int ::= "precisionFloat" "(" Float ")"
  syntax Int ::= "exponentFloat" "(" Float ")"
  syntax Int ::= "exponentBitsFloat" "(" Float ")"
  syntax Int ::= "Float2Int" "(" Float ")"
  syntax Float ::= Float "^Float" Float
  syntax Float ::= Float "/Float" Float
  syntax Float ::= Float "-Float" Float
  syntax Float ::= Float "+Float" Float
  syntax Float ::= Float "*Float" Float
  syntax Float ::= Float "%Float" Float
  syntax Float ::= "tanFloat" "(" Float ")"
  syntax Float ::= "sqrtFloat" "(" Float ")"
  syntax Float ::= "sinFloat" "(" Float ")"
  syntax Float ::= "roundFloat" "(" Float "," Int "," Int ")"
  syntax Float ::= "rootFloat" "(" Float "," Int ")"
  syntax Float ::= "plusInfinity" "(" Int "," Int ")"
  syntax Float ::= "minusInfinity" "(" Int "," Int ")"
  syntax Float ::= "minValueFloat" "(" Int "," Int ")"
  syntax Float ::= "minFloat" "(" Float "," Float ")"
  syntax Float ::= "maxValueFloat" "(" Int "," Int ")"
  syntax Float ::= "maxFloat" "(" Float "," Float ")"
  syntax Float ::= "logFloat" "(" Float ")"
  syntax Float ::= "fpNaN" "(" Int "," Int ")"
  syntax Float ::= "floorFloat" "(" Float ")"
  syntax Float ::= "expFloat" "(" Float ")"
  syntax Float ::= "cosFloat" "(" Float ")"
  syntax Float ::= "ceilFloat" "(" Float ")"
  syntax Float ::= "atanFloat" "(" Float ")"
  syntax Float ::= "atan2Float" "(" Float "," Float ")"
  syntax Float ::= "asinFloat" "(" Float ")"
  syntax Float ::= "acosFloat" "(" Float ")"
  syntax Float ::= "absFloat" "(" Float ")"
  syntax Float ::= "Int2Float" "(" Int "," Int "," Int ")"
  syntax Float ::= "--Float" Float
  syntax Bool ::= Float ">Float" Float
  syntax Bool ::= Float ">=Float" Float
  syntax Bool ::= Float "==Float" Float
  syntax Bool ::= Float "=/=Float" Float
  syntax Bool ::= Float "<Float" Float
  syntax Bool ::= Float "<=Float" Float
  syntax Bool ::= "signFloat" "(" Float ")"
  syntax Bool ::= "isNaN" "(" Float ")"
  syntax Bool ::= "isMInt" "(" K ")"
  syntax Bool ::= "isInfinite" "(" Float ")"
endmodule


module FLOAT-SYNTAX [org.kframework.attributes.Location(Location(390,1,395,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports FLOAT-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module FLOAT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(390,1,395,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax KItem ::= Float
  syntax KItem ::= Bool
  syntax K
  syntax Float [hook(FLOAT.Float) org.kframework.attributes.Location(Location(391,3,391,34)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax Float ::= r"[\\+-]?Infinity([fFdD]|([pP][0-9]+[xX][0-9]+))?"
  syntax Float ::= r"NaN([fFdD]|([pP][0-9]+[xX][0-9]+))?"
  syntax Float ::= r"([\\+-]?[0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][\\+-]?([0-9]+(\\.[0-9]*)?|\\.[0-9]d+))?([fFdD]|([pP][0-9]+[xX][0-9]+))?"
  syntax Bool ::= "isFloat" "(" K ")"
endmodule


module ID [org.kframework.attributes.Location(Location(590,1,601,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING
  imports ID$SYNTAX
  rule freshId(I)=>`String2Id`(`_+String__STRING`(#token("\"_\"","String"),`Int2String`(I))) requires isInt(I) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(600) org.kframework.attributes.Location(Location(600,8,600,62)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `String2Id`(S)=>`#parseToken(_,_)_STRING`(#token("\"Id\"","String"),S) requires isString(S) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(597) org.kframework.attributes.Location(Location(597,8,597,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
endmodule


module ID$SYNTAX [org.kframework.attributes.Location(Location(590,1,601,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  syntax String ::= "Id2String" "(" Id ")"
  syntax KItem ::= Id
  syntax K
  syntax Id [org.kframework.attributes.Location(Location(593,3,593,11)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax Id ::= "freshId" "(" Int ")"
  syntax Id ::= "String2Id" "(" String ")"
  syntax Bool ::= "isId" "(" K ")"
endmodule


module ID-PROGRAM-PARSING [org.kframework.attributes.Location(Location(583,1,588,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports ID-PROGRAM-PARSING$SYNTAX
  imports BUILTIN-ID-TOKENS
endmodule


module ID-PROGRAM-PARSING$SYNTAX [org.kframework.attributes.Location(Location(583,1,588,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax KItem ::= Id
  syntax K
  syntax Id ::= r"(?<![A-Za-z0-9\\_])[A-Za-z\\_][A-Za-z0-9\\_]*"
  syntax Id ::= #UpperId
  syntax Id ::= #LowerId
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isId" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module INT [org.kframework.attributes.Location(Location(329,1,388,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports K-EQUAL
  imports INT-SYNTAX
  imports INT$SYNTAX
  imports BOOL
  rule freshInt(I)=>I requires isInt(I) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(384) org.kframework.attributes.Location(Location(384,8,384,28)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_modInt__INT`(I1,I2)=>`_%Int__INT`(`_+Int__INT`(`_%Int__INT`(I1,absInt(I2)),absInt(I2)),absInt(I2)) requires `_andBool_`(`_andBool_`(isInt(I1),isInt(I2)),`_=/=Int__INT`(I2,#token("0","Int"))) ensures #token("true","Bool") [concrete() contentStartColumn(5) contentStartLine(366) org.kframework.attributes.Location(Location(366,5,369,23)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_dividesInt__INT`(I1,I2)=>`_==Int_`(`_%Int__INT`(I2,I1),#token("0","Int")) requires `_andBool_`(isInt(I1),isInt(I2)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(381) org.kframework.attributes.Location(Location(381,8,381,58)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_divInt__INT`(I1,I2)=>`_/Int__INT`(`_-Int__INT`(I1,`_modInt__INT`(I1,I2)),I2) requires `_andBool_`(`_andBool_`(isInt(I1),isInt(I2)),`_=/=Int__INT`(I2,#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(363) org.kframework.attributes.Location(Location(363,8,364,23)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_==Int_`(I1,I2)=>`_==K_`(I1,I2) requires `_andBool_`(isInt(I1),isInt(I2)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(379) org.kframework.attributes.Location(Location(379,8,379,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_=/=Int__INT`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires `_andBool_`(isInt(I1),isInt(I2)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(380) org.kframework.attributes.Location(Location(380,8,380,53)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  ModuleComment( divInt and modInt implement e-division ,[org.kframework.attributes.Location(Location(344,16,344,59)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( FIXME: translate /Int and %Int into smtlib ,[org.kframework.attributes.Location(Location(340,16,340,63)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( /Int and %Int implement t-division ,[org.kframework.attributes.Location(Location(341,16,341,55)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
endmodule


module INT$SYNTAX [org.kframework.attributes.Location(Location(329,1,388,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports K-EQUAL$SYNTAX
  imports INT-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  syntax priority ~Int__INT > _^%Int___INT _^Int__INT > _*Int__INT _modInt__INT _%Int__INT _/Int__INT _divInt__INT > _-Int__INT _+Int__INT > _>>Int__INT _<<Int__INT > _&Int__INT > _xorInt__INT > _|Int__INT
  syntax associativity left _|Int__INT
  syntax associativity left _xorInt__INT
  syntax associativity left _modInt__INT
  syntax associativity left _divInt__INT
  syntax associativity left _^Int__INT
  syntax associativity left _^%Int___INT _^Int__INT
  syntax associativity left _^%Int___INT
  syntax associativity left _>Int__INT
  syntax associativity left _>>Int__INT _<<Int__INT
  syntax associativity left _>>Int__INT
  syntax associativity left _>=Int__INT
  syntax associativity left _==Int_
  syntax associativity left _=/=Int__INT
  syntax associativity left _<Int__INT
  syntax associativity left _<=Int__INT
  syntax associativity left _<<Int__INT
  syntax associativity left _/Int__INT
  syntax associativity left _-Int__INT _+Int__INT
  syntax associativity left _-Int__INT
  syntax associativity left _+Int__INT
  syntax associativity left _*Int__INT _modInt__INT _%Int__INT _/Int__INT _divInt__INT
  syntax associativity left _*Int__INT
  syntax associativity left _&Int__INT
  syntax associativity left _%Int__INT
  syntax K ::= "srandInt" "(" Int ")"
  syntax Int ::= Int "|Int" Int
  syntax Int ::= Int "xorInt" Int
  syntax Int ::= Int "modInt" Int
  syntax Int ::= Int "divInt" Int
  syntax Int ::= Int "^Int" Int
  syntax Int ::= Int "^%Int" Int Int
  syntax Int ::= Int ">>Int" Int
  syntax Int ::= Int "<<Int" Int
  syntax Int ::= Int "/Int" Int
  syntax Int ::= Int "-Int" Int
  syntax Int ::= Int "+Int" Int
  syntax Int ::= Int "*Int" Int
  syntax Int ::= Int "&Int" Int
  syntax Int ::= Int "%Int" Int
  syntax Int ::= "~Int" Int
  syntax Int ::= "randInt" "(" Int ")"
  syntax Int ::= "minInt" "(" Int "," Int ")"
  syntax Int ::= "maxInt" "(" Int "," Int ")"
  syntax Int ::= "freshInt" "(" Int ")"
  syntax Int ::= "absInt" "(" Int ")"
  syntax Bool ::= Int "dividesInt" Int
  syntax Bool ::= Int ">Int" Int
  syntax Bool ::= Int ">=Int" Int
  syntax Bool ::= Int "==Int" Int
  syntax Bool ::= Int "=/=Int" Int
  syntax Bool ::= Int "<Int" Int
  syntax Bool ::= Int "<=Int" Int
endmodule


module INT-SYNTAX [org.kframework.attributes.Location(Location(324,1,327,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX
  imports INT-SYNTAX$SYNTAX
endmodule


module INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(324,1,327,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  syntax K
  syntax Int ::= r"[\\+-]?[0-9]+"
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module K [org.kframework.attributes.Location(Location(213,1,229,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports REQUIRES-ENSURES
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports K-SORT-LATTICE
  imports K$SYNTAX
  imports AUTO-FOLLOW
  imports AUTO-CASTS
  ModuleComment( functions that preserve sorts and can therefore have inner rewrites,[org.kframework.attributes.Location(Location(225,3,225,73)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( functions that do not preserve sort and therefore cannot have inner rewrites,[org.kframework.attributes.Location(Location(227,3,227,82)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
endmodule


module K$SYNTAX [org.kframework.attributes.Location(Location(213,1,229,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports REQUIRES-ENSURES$SYNTAX
  imports RECORD-PRODUCTIONS$SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports K-SORT-LATTICE$SYNTAX
  imports AUTO-FOLLOW$SYNTAX
  imports AUTO-CASTS$SYNTAX
  syntax associativity non-assoc #KRewrite
  syntax K ::= K "=>" K
  syntax K ::= K "#as" K
  syntax K ::= "#fun" "(" K "=>" K ")" "(" K ")"
  syntax K ::= "#fun" "(" K ")" "(" K ")"
endmodule


module K-BOTTOM-SORT [org.kframework.attributes.Location(Location(145,1,148,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports K-BOTTOM-SORT$SYNTAX
endmodule


module K-BOTTOM-SORT$SYNTAX [org.kframework.attributes.Location(Location(145,1,148,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  syntax KItem ::= KBott
  syntax K
  syntax Bool ::= "isKItem" "(" K ")"
endmodule


module K-EQUAL [org.kframework.attributes.Location(Location(603,1,618,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports K-EQUAL$SYNTAX
  imports BOOL
  imports BASIC-K
  rule `_==Bool__BOOL`(K1,K2)=>`_==K_`(K1,K2) requires `_andBool_`(isBool(K1),isBool(K2)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(614) org.kframework.attributes.Location(Location(614,8,614,43)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_=/=K__K-EQUAL`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires `_andBool_`(isK(K2),isK(K1)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(612) org.kframework.attributes.Location(Location(612,8,612,45)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
endmodule


module K-EQUAL$SYNTAX [org.kframework.attributes.Location(Location(603,1,618,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports BOOL$SYNTAX
  imports BASIC-K$SYNTAX
  syntax priority _=/=K__K-EQUAL _==K_ > #And _andThenBool__BOOL _impliesBool__BOOL _andBool_ _orElseBool__BOOL #Or notBool_ _orBool__BOOL _xorBool__BOOL
  syntax associativity left _=/=K__K-EQUAL _==K_
  syntax K ::= "#if" Bool "#then" K "#else" K "#fi"
  syntax Bool ::= K "==K" K
  syntax Bool ::= K "=/=K" K
endmodule


module K-IO [org.kframework.attributes.Location(Location(638,1,752,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING
  imports LIST
  imports K-IO$SYNTAX
  rule `#stdout_K-IO`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(741) org.kframework.attributes.Location(Location(741,8,741,20)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `#stdin_K-IO`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(740) org.kframework.attributes.Location(Location(740,8,740,19)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `#stderr_K-IO`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(742) org.kframework.attributes.Location(Location(742,8,742,20)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `#open(_)_K-IO`(S)=>`#open(_,_)_K-IO`(S,#token("\"rw\"","String")) requires isString(S) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(734) org.kframework.attributes.Location(Location(734,8,734,48)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  ModuleComment( stdout ,[org.kframework.attributes.Location(Location(750,71,750,82)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( stderr ,[org.kframework.attributes.Location(Location(750,95,750,106)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( start symbol,[org.kframework.attributes.Location(Location(730,43,730,58)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( module name,[org.kframework.attributes.Location(Location(731,43,731,57)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( input,[org.kframework.attributes.Location(Location(729,43,729,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( exit code ,[org.kframework.attributes.Location(Location(750,44,750,58)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( System,[org.kframework.attributes.Location(Location(747,1,747,10)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( ------------------------------,[org.kframework.attributes.Location(Location(746,1,746,34)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
endmodule


module K-IO$SYNTAX [org.kframework.attributes.Location(Location(638,1,752,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports LIST$SYNTAX
  syntax String ::= "#read" "(" Int "," Int ")"
  syntax Stream ::= "#buffer" "(" K ")"
  syntax KItem ::= Stream
  syntax KItem ::= IOError
  syntax KItem ::= "#systemResult" "(" Int "," String "," String ")"
  syntax KItem ::= "#system" "(" String ")"
  syntax KItem ::= "#stat" "(" String ")"
  syntax KItem ::= "#parseInModule" "(" String "," String "," String ")"
  syntax KItem ::= "#parse" "(" String "," String ")"
  syntax KItem ::= "#opendir" "(" String ")"
  syntax KItem ::= "#lstat" "(" String ")"
  syntax K ::= "#write" "(" Int "," String ")"
  syntax K ::= "#seekEnd" "(" Int "," Int ")"
  syntax K ::= "#seek" "(" Int "," Int ")"
  syntax K ::= "#putc" "(" Int "," Int ")"
  syntax K ::= "#close" "(" Int ")"
  syntax K
  syntax Int ::= "#tell" "(" Int ")"
  syntax Int ::= "#stdout"
  syntax Int ::= "#stdin"
  syntax Int ::= "#stderr"
  syntax Int ::= "#open" "(" String "," String ")"
  syntax Int ::= "#open" "(" String ")"
  syntax Int ::= "#getc" "(" Int ")"
  syntax IOError ::= "#unknownIOError" "(" Int ")"
  syntax IOError ::= "#noparse"
  syntax IOError ::= "#EXDEV"
  syntax IOError ::= "#EWOULDBLOCK"
  syntax IOError ::= "#ETOOMANYREFS"
  syntax IOError ::= "#ETIMEDOUT"
  syntax IOError ::= "#ESRCH"
  syntax IOError ::= "#ESPIPE"
  syntax IOError ::= "#ESOCKTNOSUPPORT"
  syntax IOError ::= "#ESHUTDOWN"
  syntax IOError ::= "#EROFS"
  syntax IOError ::= "#ERANGE"
  syntax IOError ::= "#EPROTOTYPE"
  syntax IOError ::= "#EPROTONOSUPPORT"
  syntax IOError ::= "#EPIPE"
  syntax IOError ::= "#EPFNOSUPPORT"
  syntax IOError ::= "#EPERM"
  syntax IOError ::= "#EOVERFLOW"
  syntax IOError ::= "#EOPNOTSUPP"
  syntax IOError ::= "#EOF"
  syntax IOError ::= "#ENXIO"
  syntax IOError ::= "#ENOTTY"
  syntax IOError ::= "#ENOTSOCK"
  syntax IOError ::= "#ENOTEMPTY"
  syntax IOError ::= "#ENOTDIR"
  syntax IOError ::= "#ENOTCONN"
  syntax IOError ::= "#ENOSYS"
  syntax IOError ::= "#ENOSPC"
  syntax IOError ::= "#ENOPROTOOPT"
  syntax IOError ::= "#ENOMEM"
  syntax IOError ::= "#ENOLCK"
  syntax IOError ::= "#ENOEXEC"
  syntax IOError ::= "#ENOENT"
  syntax IOError ::= "#ENODEV"
  syntax IOError ::= "#ENOBUFS"
  syntax IOError ::= "#ENFILE"
  syntax IOError ::= "#ENETUNREACH"
  syntax IOError ::= "#ENETRESET"
  syntax IOError ::= "#ENETDOWN"
  syntax IOError ::= "#ENAMETOOLONG"
  syntax IOError ::= "#EMSGSIZE"
  syntax IOError ::= "#EMLINK"
  syntax IOError ::= "#EMFILE"
  syntax IOError ::= "#ELOOP"
  syntax IOError ::= "#EISDIR"
  syntax IOError ::= "#EISCONN"
  syntax IOError ::= "#EIO"
  syntax IOError ::= "#EINVAL"
  syntax IOError ::= "#EINTR"
  syntax IOError ::= "#EINPROGRESS"
  syntax IOError ::= "#EHOSTUNREACH"
  syntax IOError ::= "#EHOSTDOWN"
  syntax IOError ::= "#EFBIG"
  syntax IOError ::= "#EFAULT"
  syntax IOError ::= "#EEXIST"
  syntax IOError ::= "#EDOM"
  syntax IOError ::= "#EDESTADDRREQ"
  syntax IOError ::= "#EDEADLK"
  syntax IOError ::= "#ECONNRESET"
  syntax IOError ::= "#ECONNREFUSED"
  syntax IOError ::= "#ECONNABORTED"
  syntax IOError ::= "#ECHILD"
  syntax IOError ::= "#EBUSY"
  syntax IOError ::= "#EBADF"
  syntax IOError ::= "#EALREADY"
  syntax IOError ::= "#EAGAIN"
  syntax IOError ::= "#EAFNOSUPPORT"
  syntax IOError ::= "#EADDRNOTAVAIL"
  syntax IOError ::= "#EADDRINUSE"
  syntax IOError ::= "#EACCES"
  syntax IOError ::= "#E2BIG"
  syntax Bool ::= "isStream" "(" K ")"
  syntax Bool ::= "isIOError" "(" K ")"
endmodule


module K-REFLECTION [org.kframework.attributes.Location(Location(620,1,636,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING
  imports K-REFLECTION$SYNTAX
  imports BASIC-K
  ModuleComment( undefined,[org.kframework.attributes.Location(Location(633,3,633,15)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( meaningful only for the purposes of compilation to a binary, otherwise,[org.kframework.attributes.Location(Location(632,3,632,76)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
endmodule


module K-REFLECTION$SYNTAX [org.kframework.attributes.Location(Location(620,1,636,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports BASIC-K$SYNTAX
  syntax String ::= "#sort" "(" K ")"
  syntax String ::= "#getenv" "(" String ")"
  syntax List ::= "#argv" "(" ")"
  syntax KItem ::= List
  syntax KItem ::= "getKLabel" "(" K ")"
  syntax KItem ::= "#fresh" "(" String ")"
  syntax K ::= "#configuration"
  syntax K
  syntax Bool ::= "isList" "(" K ")"
  syntax Bool ::= "#isConcrete" "(" K ")"
endmodule


module K-SORT-LATTICE [org.kframework.attributes.Location(Location(150,1,153,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports K-TOP-SORT
  imports K-SORT-LATTICE$SYNTAX
  imports K-BOTTOM-SORT
endmodule


module K-SORT-LATTICE$SYNTAX [org.kframework.attributes.Location(Location(150,1,153,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports K-TOP-SORT$SYNTAX
  imports K-BOTTOM-SORT$SYNTAX
endmodule


module K-TERM [org.kframework.attributes.Location(Location(232,1,238,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports K-TERM$SYNTAX
  imports K-SORT-LATTICE
  imports AUTO-FOLLOW
  imports AUTO-CASTS
endmodule


module K-TERM$SYNTAX [org.kframework.attributes.Location(Location(232,1,238,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS$SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports K-SORT-LATTICE$SYNTAX
  imports AUTO-FOLLOW$SYNTAX
  imports AUTO-CASTS$SYNTAX
endmodule


module K-TOP-SORT [org.kframework.attributes.Location(Location(140,1,143,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports K-TOP-SORT$SYNTAX
endmodule


module K-TOP-SORT$SYNTAX [org.kframework.attributes.Location(Location(140,1,143,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  syntax KItem ::= KBott
  syntax K
  syntax Bool ::= "isKItem" "(" K ")"
endmodule


module KAST [org.kframework.attributes.Location(Location(31,1,54,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports KSTRING
  imports KAST$SYNTAX
  imports BUILTIN-ID-TOKENS
  imports BASIC-K
  ModuleComment(TODO(dwightguth): there is some kind of weird issue with this production which is causing AddEmptyLists to behave incorrectly.,[org.kframework.attributes.Location(Location(51,1,51,129)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( we need to fix this issue so we can add this production back.,[org.kframework.attributes.Location(Location(52,1,52,65)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( something that doesn't collide with meta-variables,[org.kframework.attributes.Location(Location(45,24,45,77)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment(                 | KList ",," KList  [klabel(#KList), left, assoc, unit(#EmptyKList), hook(org.kframework.kore.KList), prefer],[org.kframework.attributes.Location(Location(53,1,53,129)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
endmodule


module KAST$SYNTAX [org.kframework.attributes.Location(Location(31,1,54,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  imports KSTRING$SYNTAX
  imports BUILTIN-ID-TOKENS$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left #KList
  syntax KList ::= KList "," KList
  syntax KList ::= K
  syntax KList ::= ".KList"
  syntax KList ::= ".::KList"
  syntax KLabel ::= r"`(\\\\`|\\\\\\\\|[^`\\\\\\n\\r])+`"
  syntax KLabel ::= r"(?<![a-zA-Z0-9])[#a-z][a-zA-Z0-9]*"
  syntax KLabel ::= #LowerId
  syntax KItem ::= KBott
  syntax KBott ::= KLabel "(" KList ")"
  syntax KBott ::= "#token" "(" KString "," KString ")"
  syntax KBott ::= "#klabel" "(" KLabel ")"
  syntax K
  syntax Bool ::= "isKList" "(" K ")"
endmodule


module KCELLS [org.kframework.attributes.Location(Location(87,1,98,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports KCELLS$SYNTAX
  imports KAST
endmodule


module KCELLS$SYNTAX [org.kframework.attributes.Location(Location(87,1,98,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports KAST$SYNTAX
  syntax associativity left #cells
  syntax KItem ::= Cell
  syntax KItem ::= Bag
  syntax K ::= Bag
  syntax K
  syntax Cell [org.kframework.attributes.Location(Location(90,3,90,13)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  syntax Bool ::= "isCell" "(" K ")"
  syntax Bool ::= "isBag" "(" K ")"
  syntax Bag ::= KBott
  syntax Bag ::= Cell
  syntax Bag ::= Bag Bag
  syntax Bag ::= ".Bag"
  syntax Bag ::= ".::Bag"
  syntax Bag ::= "(" Bag ")"
endmodule


module KSEQ [org.kframework.attributes.Location(Location(58,1,67,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports KSEQ$SYNTAX
  imports KAST
  imports K-TOP-SORT
endmodule


module KSEQ$SYNTAX [org.kframework.attributes.Location(Location(58,1,67,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports KAST$SYNTAX
  imports K-TOP-SORT$SYNTAX
  syntax associativity left #KSequence
  syntax KBott ::= ".K"
  syntax KBott ::= ".::K"
  syntax KBott ::= "."
  syntax K ::= K "~>" K
  syntax K ::= "(" K ")"
endmodule


module KSEQ-SYMBOLIC [org.kframework.attributes.Location(Location(71,1,85,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports KSEQ-SYMBOLIC$SYNTAX
  imports KSEQ
endmodule


module KSEQ-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(71,1,85,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports KSEQ$SYNTAX
  syntax priority #And > #Or
  syntax KLabel ::= #KVariable
  syntax KConfigVar ::= r"(?<![A-Za-z0-9_\\$!\\?])(\\$)([A-Z][A-Za-z0-9'_]*)"
  syntax KBott ::= KConfigVar
  syntax KBott ::= #KVariable
  syntax K
  syntax Bool ::= "is#Pattern" "(" K ")"
  syntax Bool ::= "is#KVariable" "(" K ")"
  syntax #Pattern ::= K
  syntax #Pattern ::= #Pattern "#Or" #Pattern
  syntax #Pattern ::= #Pattern "#And" #Pattern
  syntax #Pattern ::= "#True"
  syntax #Pattern ::= "#False"
  syntax #KVariable ::= r"(?<![A-Za-z0-9_\\$!\\?])(\\!|\\?)?([A-Z][A-Za-z0-9'_]*|_)"
  syntax #KVariable ::= #UpperId
endmodule


module KSTRING [org.kframework.attributes.Location(Location(16,1,19,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports KSTRING$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
  ModuleComment( optionally qualified strings, like in Scala "abc", i"abc", r"a*bc", etc.,[org.kframework.attributes.Location(Location(18,3,18,78)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
endmodule


module KSTRING$SYNTAX [org.kframework.attributes.Location(Location(16,1,19,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  syntax KString ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]"
  syntax KItem ::= Bool
  syntax K
  syntax Bool ::= "isKString" "(" K ")"
endmodule


module LANGUAGE-PARSING
  imports OSL
  imports K-TERM
  imports ID-PROGRAM-PARSING
endmodule


module LIST [org.kframework.attributes.Location(Location(193,1,250,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports INT-SYNTAX
  imports BASIC-K
  ModuleComment(| ".",[org.kframework.attributes.Location(Location(233,17,233,24)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment(TODO(AndreiS): move the paragraph below,[org.kframework.attributes.Location(Location(209,3,209,44)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( \section{User-Defined Lists} It is very common in \K to define a shorthand
   for lists of user-defined sorts. \K 's builtin way of doing this is to use
   List\{KItem,"Separator"\}, where "Separator" is any valid character or
   sequence of characters used to separate distinct elements.
   For example, after defining \\
   syntax KItem ::= Elt\\
   a user could then define
   syntax Elts ::= List\{Elt,","\} \\
   which would be a comma-separated list whose elements are all of sort Elt. A
   user could just as well define \\
   syntax Elts ::= List\{Elt,"and"\} \\
   which would be a list containing elements of sort Elt that are separated with
   the word "and". If only one argument is given, the separator is asumed to be
   commas. So, \\
   syntax Elts = List\{Elt\} \\
   would define a comma-separated list containing elements of sort Elt.
  ,[org.kframework.attributes.Location(Location(210,3,226,4)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( \section{Description} \K lists are ordered collections that may contain
   duplicate elements. These behave more like lists in functional programming
   languages than arrays in imperative programming languages; there's no
   numerical indexing, but instead specific elements are refered to using the
   Mylist,Mylist construct in combination with the MyListItem construct. It's
   worth noting that \K lists aren't exactly like lists in functional languages;
   they're associative, which means that it's easy to access elements at both
   ends of the lists and concatenate them. For example, L:Mylist,E accesses
   element E at the end of a list. ,[org.kframework.attributes.Location(Location(199,3,207,37)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Remove elements from the beginning and the end of the List. ,[org.kframework.attributes.Location(Location(242,3,242,68)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Get the list length ,[org.kframework.attributes.Location(Location(248,3,248,28)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Get an element form the List by index. Positive indices mean from the
   beginning (0 is the first element), and negative indices mean from the end
   (-1 is the last element). ,[org.kframework.attributes.Location(Location(237,3,239,31)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Construct an empty List: ,[org.kframework.attributes.Location(Location(231,3,231,33)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Construct a singleton List (a list with only  one element) ,[org.kframework.attributes.Location(Location(234,3,234,67)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Construct a new List as the concatenation of two Lists. This is similar to
   the append "@" operation in many functional programming languages. ,[org.kframework.attributes.Location(Location(228,3,229,72)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Check element membership in the given list ,[org.kframework.attributes.Location(Location(245,3,245,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
endmodule


module LIST$SYNTAX [org.kframework.attributes.Location(Location(193,1,250,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _List_
  syntax List [hook(LIST.List) org.kframework.attributes.Location(Location(197,3,197,31)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax List ::= List List
  syntax List ::= "range" "(" List "," Int "," Int ")"
  syntax List ::= "ListItem" "(" K ")"
  syntax List ::= ".List"
  syntax KItem ::= List
  syntax K ::= List "[" Int "]"
  syntax K
  syntax Int ::= "size" "(" List ")"
  syntax Bool ::= K "in" List
  syntax Bool ::= "isList" "(" K ")"
endmodule


module MAP [org.kframework.attributes.Location(Location(83,1,147,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports SET
  imports MAP$SYNTAX
  imports LIST
  ModuleComment(| "."                            [function, hook(MAP.unit)],[org.kframework.attributes.Location(Location(99,16,99,77)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment(\section{Description} The Map represents a generalized associative array.
   Each key can be paired with an arbitrary value, and can be used to reference
   its associated value. Multiple bindings for the same key are not allowed. ,[org.kframework.attributes.Location(Location(89,3,91,79)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( breaks klabel uniqueness,[org.kframework.attributes.Location(Location(98,16,98,43)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Update the first map by adding all key/value pairs in the second map. If a
   key in the first map exists also in the second map, its associated value will
   be overwritten by the value from the second map. ,[org.kframework.attributes.Location(Location(122,3,124,54)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Update the Map by removing all key/value pairs with the key in the Set. ,[org.kframework.attributes.Location(Location(127,3,127,80)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Update a Map in form of  of keys and values: ,[org.kframework.attributes.Location(Location(112,3,112,53)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Retrieve the value associated with the given key ,[org.kframework.attributes.Location(Location(107,3,107,57)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Remove key/value pair associated with the key from map? ,[org.kframework.attributes.Location(Location(115,3,115,64)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Get the difference of two maps interpreted as sets of entries
   ($M_1 \setminus M2$) ,[org.kframework.attributes.Location(Location(118,3,119,26)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Get the Map size (number of key/value pairs) ,[org.kframework.attributes.Location(Location(139,3,139,53)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Get an arbitrarily chosen key of the Map  ,[org.kframework.attributes.Location(Location(145,3,145,50)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Get a Set consisting of all keys in the Map:,[org.kframework.attributes.Location(Location(130,3,130,52)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Get a List consisting of all values in the Map: ,[org.kframework.attributes.Location(Location(136,3,136,56)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Construct a singleton Map (a Map with only one key/value pair). The key
   is on the left and the value is on the right ,[org.kframework.attributes.Location(Location(100,3,101,50)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Construct a new Map consisting of key/value pairs of two Maps (the keys of
   the two Maps are assumed disjoint) ,[org.kframework.attributes.Location(Location(93,3,94,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Check map inclusion ,[org.kframework.attributes.Location(Location(142,3,142,28)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment(  Construct an empty Map ,[org.kframework.attributes.Location(Location(96,3,96,32)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
endmodule


module MAP$SYNTAX [org.kframework.attributes.Location(Location(83,1,147,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports LIST$SYNTAX
  syntax priority _|->_ > .Map _Map_
  syntax associativity non-assoc _|->_
  syntax associativity left _Map_
  syntax Set ::= "keys" "(" Map ")"
  syntax Map [hook(MAP.Map) org.kframework.attributes.Location(Location(87,3,87,28)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax Map ::= Map Map
  syntax Map ::= Map "[" K "<-" K "]"
  syntax Map ::= Map "[" K "<-" "undef" "]"
  syntax Map ::= Map "-Map" Map
  syntax Map ::= K "|->" K
  syntax Map ::= "updateMap" "(" Map "," Map ")"
  syntax Map ::= "removeAll" "(" Map "," Set ")"
  syntax Map ::= ".Map"
  syntax List ::= "values" "(" Map ")"
  syntax List ::= "keys_list" "(" Map ")"
  syntax KItem ::= Map
  syntax K ::= Map "[" K "]" "orDefault" K
  syntax K ::= Map "[" K "]"
  syntax K ::= "choice" "(" Map ")"
  syntax K
  syntax Int ::= "size" "(" Map ")"
  syntax Bool ::= Map "<=Map" Map
  syntax Bool ::= K "in_keys" "(" Map ")"
  syntax Bool ::= "isMap" "(" K ")"
endmodule


module MINT$SYNTAX [org.kframework.attributes.Location(Location(926,1,1118,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  syntax MInt [hook(MINT.MInt) org.kframework.attributes.Location(Location(931,3,931,31)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax MInt ::= "xorMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "uremMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "udivMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "subMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "shlMInt" "(" MInt "," Int ")"
  syntax MInt ::= "sMinMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "sMaxMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "orMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "negMInt" "(" MInt ")"
  syntax MInt ::= "mulMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "miMInt" "(" List ")"
  syntax MInt ::= "mi" "(" Int "," Int ")"
  syntax MInt ::= "mIntOfDigits" "(" List ")"
  syntax MInt ::= "lshrMInt" "(" MInt "," Int ")"
  syntax MInt ::= "extractMInt" "(" MInt "," Int "," Int ")"
  syntax MInt ::= "concatenateMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "ashrMInt" "(" MInt "," Int ")"
  syntax MInt ::= "andMInt" "(" MInt "," MInt ")"
  syntax MInt ::= "addMInt" "(" MInt "," MInt ")"
  syntax List ::= "usubMInt" "(" MInt "," MInt ")"
  syntax List ::= "umulMInt" "(" MInt "," MInt ")"
  syntax List ::= "uaddMInt" "(" MInt "," MInt ")"
  syntax List ::= "ssubMInt" "(" MInt "," MInt ")"
  syntax List ::= "sremMInt" "(" MInt "," MInt ")"
  syntax List ::= "smulMInt" "(" MInt "," MInt ")"
  syntax List ::= "sdivMInt" "(" MInt "," MInt ")"
  syntax List ::= "saddMInt" "(" MInt "," MInt ")"
  syntax List ::= "digitsOfMInt" "(" MInt "," Int "," Int ")"
  syntax KItem ::= MInt
  syntax K
  syntax Int ::= "uvalueMInt" "(" MInt ")"
  syntax Int ::= "uminMInt" "(" Int ")"
  syntax Int ::= "umaxMInt" "(" Int ")"
  syntax Int ::= "svalueMInt" "(" MInt ")"
  syntax Int ::= "sminMInt" "(" Int ")"
  syntax Int ::= "smaxMInt" "(" Int ")"
  syntax Int ::= "bitwidthMInt" "(" MInt ")"
  syntax Bool ::= "zeroMInt" "(" MInt ")"
  syntax Bool ::= "uoverflowMInt" "(" Int "," Int ")"
  syntax Bool ::= "ultMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "uleMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "ugtMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "ugeMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "soverflowMInt" "(" Int "," Int ")"
  syntax Bool ::= "sltMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "sleMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "sgtMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "sgeMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "overflowMInt" "(" List ")"
  syntax Bool ::= "neMInt" "(" MInt "," MInt ")"
  syntax Bool ::= "isMInt" "(" K ")"
  syntax Bool ::= "eqMInt" "(" MInt "," MInt ")"
endmodule


module OSL [org.kframework.attributes.Location(Location(9,1,404,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  imports OSL-SYNTAX
  imports OSL$SYNTAX
  imports CONTROL
  imports CONFIGURATION
  imports CALL
  imports BLOCK
  syntax KItem ::= "#freezerval0_" "(" ")"
  syntax KItem ::= "#freezer#lvDref0_" "(" ")"
  syntax KItem ::= "#freezer#expStmt0_" "(" ")"
  syntax KItem ::= "#freezer#TransferMB1_" "(" K ")"
  syntax KItem ::= "#freezer#TransferIB1_" "(" K ")"
  syntax KItem ::= "#freezer#Transfer1_" "(" K ")"
  syntax KItem ::= "#freezer#Transfer0_" "(" K ")"
  syntax KItem ::= "#freezer#Read0_" "(" ")"
  syntax KItem ::= "#freezer#Deallocate0_" "(" ")"
  syntax K
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``val(V)=>V``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isValue(V) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(388) org.kframework.attributes.Location(Location(388,6,388,23)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``val(HOLE)=>HOLE~>`#freezerval0_`(.KList)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isExp(HOLE),`_andBool_`(#token("true","Bool"),`notBool_`(isKResult(HOLE)))) ensures #token("true","Bool") [heat() klabel(val) org.kframework.attributes.Location(Location(52,12,52,56)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/osl-syntax.k)) productionID(1664598529) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``X=>#read(X)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isId(X) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(173) org.kframework.attributes.Location(Location(173,6,173,19)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``V~>`.List{"___OSL-SYNTAX"}`(.KList)=>V``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isValue(V) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(24) org.kframework.attributes.Location(Location(24,6,24,28)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``HOLE~>`#freezerval0_`(.KList)=>val(HOLE)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isExp(HOLE),`_andBool_`(#token("true","Bool"),isKResult(HOLE))) ensures #token("true","Bool") [cool() klabel(val) org.kframework.attributes.Location(Location(52,12,52,56)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/osl-syntax.k)) productionID(1664598529) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``HOLE~>`#freezer#lvDref0_`(.KList)=>#lvDref(HOLE)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isExp(HOLE),`_andBool_`(#token("true","Bool"),isKResult(HOLE))) ensures #token("true","Bool") [cool() klabel(#lvDref) org.kframework.attributes.Location(Location(253,12,253,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(1932332324) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``HOLE~>`#freezer#expStmt0_`(.KList)=>#expStmt(HOLE)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isExp(HOLE),`_andBool_`(#token("true","Bool"),isKResult(HOLE))) ensures #token("true","Bool") [cool() klabel(#expStmt) org.kframework.attributes.Location(Location(51,12,51,73)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/osl-syntax.k)) productionID(1225568095) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``HOLE~>`#freezer#TransferMB1_`(K1)=>#TransferMB(HOLE,K1)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(`_andBool_`(isK(HOLE),isK(K1)),`_andBool_`(#token("true","Bool"),isKResult(HOLE))) ensures #token("true","Bool") [cool() klabel(#TransferMB) org.kframework.attributes.Location(Location(150,12,150,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(1344697180) strict(1)]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``HOLE~>`#freezer#TransferIB1_`(K1)=>#TransferIB(HOLE,K1)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(`_andBool_`(isK(HOLE),isK(K1)),`_andBool_`(#token("true","Bool"),isKResult(HOLE))) ensures #token("true","Bool") [cool() klabel(#TransferIB) org.kframework.attributes.Location(Location(149,12,149,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(376635015) strict(1)]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``HOLE~>`#freezer#Transfer1_`(K1)=>#Transfer(HOLE,K1)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(`_andBool_`(isExp(HOLE),isExp(K1)),`_andBool_`(#token("true","Bool"),isKResult(HOLE))) ensures #token("true","Bool") [cool() klabel(#Transfer) org.kframework.attributes.Location(Location(36,12,36,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(1920907467) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``HOLE~>`#freezer#Transfer0_`(K0)=>#Transfer(K0,HOLE)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(`_andBool_`(isExp(HOLE),isExp(K0)),`_andBool_`(#token("true","Bool"),isKResult(HOLE))) ensures #token("true","Bool") [cool() klabel(#Transfer) org.kframework.attributes.Location(Location(36,12,36,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(1920907467) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``HOLE~>`#freezer#Read0_`(.KList)=>#Read(HOLE)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isK(HOLE),`_andBool_`(#token("true","Bool"),isKResult(HOLE))) ensures #token("true","Bool") [cool() klabel(#Read) org.kframework.attributes.Location(Location(186,12,186,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(300983713) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``HOLE~>`#freezer#Deallocate0_`(.KList)=>#Deallocate(HOLE)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isExp(HOLE),`_andBool_`(#token("true","Bool"),isKResult(HOLE))) ensures #token("true","Bool") [cool() klabel(#Deallocate) org.kframework.attributes.Location(Location(391,12,391,48)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(1099717276) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#uninitialize(#loc(F))=>.K``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(F,_32=>`#uninit_OSL-SYNTAX`(.KList)),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires isInt(F) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(170) org.kframework.attributes.Location(Location(170,6,171,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#transfer(EF,TX)=>#Transfer(#lv(EF),#lv(TX))~>`#increaseIndex_OSL`(.KList)~>`#increaseTimer_OSL`(.KList)``~>DotVar3),`<env>`(ENV),_1,_2,`<write>`(`_Set_`(`.Set`(.KList)=>`SetItem`(#writev(#wv(TX,ENV),TR)),DotVar4)),`<timer>`(TR),_3,_4),DotVar1)),_5,_6,_7) requires `_andBool_`(`_andBool_`(`_andBool_`(isExp(TX),isMap(ENV)),isExp(EF)),isInt(TR)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(49) org.kframework.attributes.Location(Location(49,6,53,68)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#read(X)=>#read(#loc(L))``~>DotVar3),`<env>`(`_Map_`(`_|->_`(X,L),DotVar4)),_1,_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(isId(X),isInt(L)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(176) org.kframework.attributes.Location(Location(176,6,177,39)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#read(#loc(L))=>#rs(N)``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(L,#rs(N)),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(isProps(N),isInt(L)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(179) org.kframework.attributes.Location(Location(179,6,180,49)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#read(#loc(L))=>#Read(#borrowMutCK(L,BEG,END,L1))~>#loc(L1)``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(L,#br(BEG,END,#mutRef(L1))),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(`_andBool_`(`_andBool_`(isInt(END),isInt(BEG)),isInt(L)),isInt(L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(192) org.kframework.attributes.Location(Location(192,6,193,75)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#read(#loc(L))=>#Read(#borrowImmCK(L,BEG,END,L1))~>#loc(L1)``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(L,#br(BEG,END,#immRef(L1))),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(`_andBool_`(`_andBool_`(isInt(END),isInt(BEG)),isInt(L)),isInt(L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(182) org.kframework.attributes.Location(Location(182,6,183,75)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#mborrow(X,Y)=>.K``~>DotVar3),`<env>`(ENV),`<store>`(ST=>`_[_<-_]_MAP`(ST,#unwrapInt(`Map:lookup`(ENV,X)),#br(C,C,#mutRef(#unwrapInt(`Map:lookup`(ENV,Y)))))),_1,_2,`<timer>`(TIMER=>`_+Int__INT`(TIMER,#token("1","Int"))),_3,`<indexes>`(#indexes(C=>`_+Int__INT`(C,#token("1","Int")),_44))),DotVar1)),_4,_5,_6) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(TIMER),isInt(C)),isMap(ENV)),isId(X)),isInt(_44)),isId(Y)),isMap(ST)),`_andBool_`(#checkInit(Y,ENV,ST),#isOwnerHasMutProp(`Map:lookup`(ST,#unwrapInt(`Map:lookup`(ENV,Y)))))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(374) org.kframework.attributes.Location(Location(374,6,379,86)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#lvDref(HOLE)=>HOLE~>`#freezer#lvDref0_`(.KList)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isExp(HOLE),`_andBool_`(#token("true","Bool"),`notBool_`(isKResult(HOLE)))) ensures #token("true","Bool") [heat() klabel(#lvDref) org.kframework.attributes.Location(Location(253,12,253,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(1932332324) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#lvDref(#loc(L))=>#borrowMutCK(L,BEG,END,L1)``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(L,#br(BEG,END,#immRef(L1))),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(`_andBool_`(`_andBool_`(isInt(END),isInt(BEG)),isInt(L)),isInt(L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(261) org.kframework.attributes.Location(Location(261,6,262,75)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#lvDref(#loc(L))=>#borrowImmCK(L,BEG,END,L1)``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(L,#br(BEG,END,#immRef(L1))),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(`_andBool_`(`_andBool_`(isInt(END),isInt(BEG)),isInt(L)),isInt(L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(257) org.kframework.attributes.Location(Location(257,6,258,75)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#lv(`newResource(_)_OSL-SYNTAX`(Ps))=>`newResource(_)_OSL-SYNTAX`(Ps)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isProps(Ps) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(39) org.kframework.attributes.Location(Location(39,6,39,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#lv(`*__OSL-SYNTAX`(E))=>#lvDref(#lv(E))``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isExp(E) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(255) org.kframework.attributes.Location(Location(255,6,255,39)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#lv(X)=>#loc(L)``~>DotVar3),`<env>`(`_Map_`(`_|->_`(X,L),DotVar4)),_1,_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(isInt(L),isExp(X)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(247) org.kframework.attributes.Location(Location(247,6,248,38)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#lv(X)=>#loc(I)``~>DotVar3),`<env>`(`_Map_`(`_|->_`(X,I),DotVar4)),_1,_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(isId(X),isInt(I)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(44) org.kframework.attributes.Location(Location(44,6,45,39)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#lv(#read(X))=>#lv(X)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isExp(X) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(47) org.kframework.attributes.Location(Location(47,6,47,26)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#lv(#loc(L))=>#loc(L)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isInt(L) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(250) org.kframework.attributes.Location(Location(250,6,250,33)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#lv(#FnCall(F,Es))=>#FnCall(F,Es)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isExps(Es),isId(F)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(42) org.kframework.attributes.Location(Location(42,6,42,55)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#expStmt(V)=>.K``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isValue(V) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(26) org.kframework.attributes.Location(Location(26,6,26,20)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#expStmt(HOLE)=>HOLE~>`#freezer#expStmt0_`(.KList)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isExp(HOLE),`_andBool_`(#token("true","Bool"),`notBool_`(isKResult(HOLE)))) ensures #token("true","Bool") [heat() klabel(#expStmt) org.kframework.attributes.Location(Location(51,12,51,73)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/osl-syntax.k)) productionID(1225568095) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#decl(X)=>.K``~>DotVar3),`<env>`(Rho=>`_[_<-_]_MAP`(Rho,X,N)),`<store>`(`_Map_`(`.Map`(.KList)=>`_|->_`(N,`#uninit_OSL-SYNTAX`(.KList)),DotVar4)),`<stack>`(`_List_`(`.List`(.KList)=>`ListItem`(X),DotVar5)),_1,`<timer>`(TI=>`_+Int__INT`(TI,#token("1","Int"))),_2,`<indexes>`(#indexes(N=>`_+Int__INT`(N,#token("1","Int")),_38))),DotVar1)),_3,_4,_5) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(TI),isInt(_38)),isId(X)),isMap(Rho)),isInt(N)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(28) org.kframework.attributes.Location(Location(28,6,33,59)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#deallocate(E)=>#Deallocate(#lv(E))``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isExp(E) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(393) org.kframework.attributes.Location(Location(393,6,393,47)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#borrowMutCK(L,BEG,END,L1)=>#loc(L1)``~>DotVar3),_1,`<store>`(Rho=>`_[_<-_]_MAP`(Rho,L,#br(BEG,TIMER,#mutRef(L1)))),_2,`<write>`(WRITE),`<timer>`(TIMER),`<unsafe-mode>`(UNSAFE_BLOCK),`<indexes>`(#indexes(C,_40))),DotVar1)),_3,_4,_5) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(TIMER),isSet(WRITE)),isBool(UNSAFE_BLOCK)),isInt(C)),isInt(END)),isInt(BEG)),isInt(_40)),isMap(Rho)),isInt(L)),isInt(L1)),`_orBool__BOOL`(`_==Bool__BOOL`(UNSAFE_BLOCK,#token("true","Bool")),`_andBool_`(`_==Bool__BOOL`(#borrowmutck(L,Rho,BEG,TIMER,L1),#token("false","Bool")),#writeCK(L1,BEG,TIMER,WRITE)))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(223) org.kframework.attributes.Location(Location(223,6,232,46)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#borrowImmCK(L,BEG,END,L1)=>#loc(L1)``~>DotVar3),_1,`<store>`(Rho=>`_[_<-_]_MAP`(Rho,L,#br(BEG,TIMER,#immRef(L1)))),_2,`<write>`(WRITE),`<timer>`(TIMER),`<unsafe-mode>`(UNSAFE_BLOCK),`<indexes>`(#indexes(C,_52))),DotVar1)),_3,_4,_5) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(TIMER),isSet(WRITE)),isBool(UNSAFE_BLOCK)),isInt(_52)),isInt(C)),isInt(END)),isInt(BEG)),isMap(Rho)),isInt(L)),isInt(L1)),`_orBool__BOOL`(`_==Bool__BOOL`(UNSAFE_BLOCK,#token("true","Bool")),`_andBool_`(`_==Bool__BOOL`(#borrowimmck(L,Rho,BEG,TIMER,L1),#token("false","Bool")),#writeCK(L1,BEG,TIMER,WRITE)))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(212) org.kframework.attributes.Location(Location(212,6,221,46)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#borrow(X,Y)=>.K``~>DotVar3),`<env>`(ENV),`<store>`(ST=>`_[_<-_]_MAP`(ST,#unwrapInt(`Map:lookup`(ENV,X)),#br(C,C,#immRef(#unwrapInt(`Map:lookup`(ENV,Y)))))),_1,_2,`<timer>`(TIMER=>`_+Int__INT`(TIMER,#token("1","Int"))),_3,`<indexes>`(#indexes(C=>`_+Int__INT`(C,#token("1","Int")),_33))),DotVar1)),_4,_5,_6) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(TIMER),isInt(_33)),isInt(C)),isMap(ENV)),isId(X)),isId(Y)),isMap(ST)),#checkInit(Y,ENV,ST)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(352) org.kframework.attributes.Location(Location(352,6,359,35)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#TransferV(#loc(F),#loc(L))=>#TransferMB(#read(#loc(F)),#loc(L))~>#uninitialize(#loc(F))``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(F,#br(BEG,END,#mutRef(L1))),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(END),isInt(BEG)),isInt(F)),isInt(L)),isInt(L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(156) org.kframework.attributes.Location(Location(156,6,159,61)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#TransferV(#loc(F),#loc(L))=>#TransferIB(#read(#loc(F)),#loc(L))``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(F,#br(BEG,END,#immRef(L1))),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(END),isInt(BEG)),isInt(F)),isInt(L)),isInt(L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(153) org.kframework.attributes.Location(Location(153,6,154,61)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#TransferV(#loc(F),#loc(L))=>#Transfer(#rs(PS),#loc(L))``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(F,#rs(PS))=>`_|->_`(F,`#uninit_OSL-SYNTAX`(.KList)),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(`_andBool_`(`_andBool_`(isInt(F),isProps(PS)),isInt(L)),`notBool_`(#inProps(`copy_OSL-SYNTAX`(.KList),PS))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(139) org.kframework.attributes.Location(Location(139,6,141,41)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#TransferV(#loc(F),#loc(L))=>#Transfer(#rs(PS),#loc(L))``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(F,#rs(PS)),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(`_andBool_`(`_andBool_`(isInt(F),isProps(PS)),isInt(L)),#inProps(`copy_OSL-SYNTAX`(.KList),PS)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(144) org.kframework.attributes.Location(Location(144,6,146,33)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#TransferMB(HOLE,K1)=>HOLE~>`#freezer#TransferMB1_`(K1)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(`_andBool_`(isK(HOLE),isK(K1)),`_andBool_`(#token("true","Bool"),`notBool_`(isKResult(HOLE)))) ensures #token("true","Bool") [heat() klabel(#TransferMB) org.kframework.attributes.Location(Location(150,12,150,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(1344697180) strict(1)]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#TransferMB(#loc(F),#loc(L))=>.K``~>DotVar3),_1,`<store>`(Rho=>`_[_<-_]_MAP`(Rho,L,#br(C,C,#mutRef(F)))),_2,_3,_4,_5,`<indexes>`(#indexes(C,_31))),DotVar1)),_6,_7,_8) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(C),isInt(_31)),isInt(F)),isMap(Rho)),isInt(L)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(166) org.kframework.attributes.Location(Location(166,6,168,49)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#TransferIB(HOLE,K1)=>HOLE~>`#freezer#TransferIB1_`(K1)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(`_andBool_`(isK(HOLE),isK(K1)),`_andBool_`(#token("true","Bool"),`notBool_`(isKResult(HOLE)))) ensures #token("true","Bool") [heat() klabel(#TransferIB) org.kframework.attributes.Location(Location(149,12,149,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(376635015) strict(1)]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#TransferIB(#loc(F),#loc(L))=>.K``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(L,_36=>#br(C,C,#immRef(F))),DotVar4)),_2,_3,_4,_5,`<indexes>`(#indexes(C,_37))),DotVar1)),_6,_7,_8) requires `_andBool_`(`_andBool_`(`_andBool_`(isInt(C),isInt(F)),isInt(_37)),isInt(L)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(161) org.kframework.attributes.Location(Location(161,6,163,49)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Transfer(K0,HOLE)=>HOLE~>`#freezer#Transfer0_`(K0)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(`_andBool_`(isExp(HOLE),isExp(K0)),`_andBool_`(#token("true","Bool"),`notBool_`(isKResult(HOLE)))) ensures #token("true","Bool") [heat() klabel(#Transfer) org.kframework.attributes.Location(Location(36,12,36,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(1920907467) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Transfer(HOLE,K1)=>HOLE~>`#freezer#Transfer1_`(K1)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(`_andBool_`(isExp(HOLE),isExp(K1)),`_andBool_`(#token("true","Bool"),`notBool_`(isKResult(HOLE)))) ensures #token("true","Bool") [heat() klabel(#Transfer) org.kframework.attributes.Location(Location(36,12,36,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(1920907467) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Transfer(#rs(R),#loc(L))=>.K``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(L,`#uninit_OSL-SYNTAX`(.KList))=>`_|->_`(L,#rs(R)),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(isProps(R),isInt(L)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(114) org.kframework.attributes.Location(Location(114,6,115,62)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Transfer(#rs(R),#loc(L))=>.K``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(L,#rs(_56))=>`_|->_`(L,#rs(R)),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(`_andBool_`(isProps(R),isProps(_56)),isInt(L)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(117) org.kframework.attributes.Location(Location(117,6,118,61)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Transfer(#rs(R),#loc(L))=>#Transfer(#rs(R),#loc(MR))``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(L,#br(_34,_35,#mutRef(MR))),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isProps(R),isInt(_35)),isInt(_34)),isInt(L)),isInt(MR)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(122) org.kframework.attributes.Location(Location(122,6,123,59)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Transfer(#ref(F),#loc(L))=>#TransferMB(#loc(F),#loc(L))``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(F,#rs(PS)),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(`_andBool_`(`_andBool_`(isInt(F),isProps(PS)),isInt(L)),#inProps(`mut_OSL-SYNTAX`(.KList),PS)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(135) org.kframework.attributes.Location(Location(135,6,137,32)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Transfer(#ref(F),#loc(L))=>#TransferIB(#loc(F),#loc(L))``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(F,#rs(PS)),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(`_andBool_`(`_andBool_`(isInt(F),isProps(PS)),isInt(L)),`notBool_`(#inProps(`mut_OSL-SYNTAX`(.KList),PS))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(128) org.kframework.attributes.Location(Location(128,6,130,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Transfer(#loc(F),#loc(L))=>#TransferV(#loc(F),#loc(L))``~>DotVar3),_1,`<store>`(STORE),_2,_3,_4,_5,`<indexes>`(#indexes(C,_59))),DotVar1)),_6,_7,_8) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(C),isInt(F)),isMap(STORE)),isInt(L)),isInt(_59)),`_andBool_`(`notBool_`(#existRef(#immRef(F),#list2Set(values(STORE)),C)),`notBool_`(#existRef(#mutRef(F),#list2Set(values(STORE)),C)))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(107) org.kframework.attributes.Location(Location(107,6,111,67)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Read(HOLE)=>HOLE~>`#freezer#Read0_`(.KList)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isK(HOLE),`_andBool_`(#token("true","Bool"),`notBool_`(isKResult(HOLE)))) ensures #token("true","Bool") [heat() klabel(#Read) org.kframework.attributes.Location(Location(186,12,186,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(300983713) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Read(#rs(R))=>.K``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isProps(R) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(190) org.kframework.attributes.Location(Location(190,6,190,30)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Read(#loc(L))=>#Read(#read(#loc(L)))``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isInt(L) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(188) org.kframework.attributes.Location(Location(188,6,188,46)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Deallocate(HOLE)=>HOLE~>`#freezer#Deallocate0_`(.KList)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isExp(HOLE),`_andBool_`(#token("true","Bool"),`notBool_`(isKResult(HOLE)))) ensures #token("true","Bool") [heat() klabel(#Deallocate) org.kframework.attributes.Location(Location(391,12,391,48)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k)) productionID(1099717276) strict()]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Deallocate(#rs(Ps))=>.K``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isProps(Ps) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(395) org.kframework.attributes.Location(Location(395,6,395,37)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(``#Deallocate(#loc(I))=>.K``~>DotVar3),_1,`<store>`(`_Map_`(`_|->_`(I,#rs(_45))=>`_|->_`(I,`#uninit_OSL-SYNTAX`(.KList)),DotVar4)),_2,_3,_4,_5,_6),DotVar1)),_7,_8,_9) requires `_andBool_`(isInt(I),isProps(_45)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(401) org.kframework.attributes.Location(Location(401,6,402,63)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(`` `newResource(_)_OSL-SYNTAX`(Ps)=>#rs(Ps)``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isProps(Ps) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(18) org.kframework.attributes.Location(Location(18,6,18,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(`` `___OSL-SYNTAX`(S,Ss)=>S~>Ss``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isStmts(Ss),isStmt(S)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(20) org.kframework.attributes.Location(Location(20,6,20,32)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(`` `.List{"___OSL-SYNTAX"}`(.KList)=>.K``~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(21) org.kframework.attributes.Location(Location(21,6,21,17)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(`` `#increaseTimer_OSL`(.KList)=>.K``~>DotVar3),_1,_2,_3,_4,`<timer>`(TIMER=>`_+Int__INT`(TIMER,#token("1","Int"))),_5,_6),DotVar1)),_7,_8,_9) requires isInt(TIMER) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(77) org.kframework.attributes.Location(Location(77,6,78,48)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(`` `#increaseIndex_OSL`(.KList)=>.K``~>DotVar3),_1,_2,_3,_4,_5,_6,`<indexes>`(#indexes(C=>`_+Int__INT`(C,#token("1","Int")),_41))),DotVar1)),_7,_8,_9) requires `_andBool_`(isInt(_41),isInt(C)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(74) org.kframework.attributes.Location(Location(74,6,75,63)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #wv(`*__OSL-SYNTAX`(E),ENV)=>#wv(E,ENV) requires `_andBool_`(isExp(E),isMap(ENV)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(67) org.kframework.attributes.Location(Location(67,6,67,41)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #wv(X,ENV)=>#unwrapVal(`Map:lookup`(ENV,X)) requires `_andBool_`(isMap(ENV),isId(X)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(66) org.kframework.attributes.Location(Location(66,6,66,46)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #writeCK(_53,_54,_55,`.Set`(.KList))=>#token("true","Bool") requires `_andBool_`(`_andBool_`(isInt(_53),isInt(_55)),isInt(_54)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(208) org.kframework.attributes.Location(Location(208,6,208,34)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #writeCK(L,B,E,`_Set_`(`SetItem`(#writev(L1,T)),RestS))=>#writeCK(L,B,E,RestS) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(E),isInt(B)),isInt(T)),isSet(RestS)),isInt(L)),isInt(L1)),`_=/=Int__INT`(L,L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(201) org.kframework.attributes.Location(Location(201,6,202,26)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #writeCK(L,B,E,`_Set_`(`SetItem`(#writev(L,T)),RestS))=>#writeCK(L,B,E,RestS) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(E),isInt(B)),isInt(T)),isSet(RestS)),isInt(L)),`notBool_`(`_andBool_`(`_<=Int__INT`(B,T),`_<=Int__INT`(T,E)))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(205) org.kframework.attributes.Location(Location(205,6,206,56)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #writeCK(L,B,E,`_Set_`(`SetItem`(#writev(L,T)),RestS))=>#token("false","Bool") requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(E),isInt(B)),isInt(T)),isSet(RestS)),isInt(L)),`_andBool_`(`_<=Int__INT`(B,T),`_<=Int__INT`(T,E))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(198) org.kframework.attributes.Location(Location(198,6,199,47)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #unwrapVal(V)=>V requires isInt(V) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(64) org.kframework.attributes.Location(Location(64,6,64,28)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #unwrapInt(I)=>I requires isInt(I) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(385) org.kframework.attributes.Location(Location(385,6,385,28)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #list2Set(`_List_`(`ListItem`(E),L))=>`_Set_`(`SetItem`(E),#list2Set(L)) requires isList(L) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(93) org.kframework.attributes.Location(Location(93,6,93,62)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #list2Set(`.List`(.KList))=>`.Set`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(92) org.kframework.attributes.Location(Location(92,6,92,30)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #lc(L1,L2,L3,L4)=>`_orBool__BOOL`(`_andBool_`(`_<Int__INT`(L1,L3),`_<=Int__INT`(L3,L2)),`_andBool_`(`_<Int__INT`(L1,L4),`_<=Int__INT`(L4,L2))) requires `_andBool_`(`_andBool_`(`_andBool_`(isInt(L4),isInt(L2)),isInt(L3)),isInt(L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(272) org.kframework.attributes.Location(Location(272,6,273,55)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #isOwnerHasMutProp(`#voidTy_OSL-SYNTAX`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(369) org.kframework.attributes.Location(Location(369,6,369,42)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #isOwnerHasMutProp(#rs(PS))=>#token("true","Bool") requires `_andBool_`(isProps(PS),#inProps(`mut_OSL-SYNTAX`(.KList),PS)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(365) org.kframework.attributes.Location(Location(365,6,366,32)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #isOwnerHasMutProp(#ref(_65,_66))=>#token("false","Bool") requires `_andBool_`(isLifetime(_65),isType(_66)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(368) org.kframework.attributes.Location(Location(368,6,368,45)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #inProps(P1,#props(P,Ps))=>#inProps(P1,Ps) requires `_andBool_`(`_andBool_`(isProp(P1),isProps(Ps)),`_=/=K__K-EQUAL`(P1,P)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(85) org.kframework.attributes.Location(Location(85,6,86,24)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #inProps(P,`.List{"#props"}`(.KList))=>#token("false","Bool") requires isProp(P) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(87) org.kframework.attributes.Location(Location(87,6,87,34)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #inProps(P,#props(P,Ps))=>#token("true","Bool") requires isProp(P) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(84) org.kframework.attributes.Location(Location(84,6,84,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #existRef(_57,`.Set`(.KList),_58)=>#token("false","Bool") requires isInt(_58) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(104) org.kframework.attributes.Location(Location(104,6,104,36)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #existRef(R,`_Set_`(`SetItem`(`#uninit_OSL-SYNTAX`(.KList)),S),C)=>#existRef(R,S,C) requires `_andBool_`(`_andBool_`(isSet(S),isInt(C)),isK(R)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(99) org.kframework.attributes.Location(Location(99,6,99,73)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #existRef(R,`_Set_`(`SetItem`(#rs(_29)),S),C)=>#existRef(R,S,C) requires `_andBool_`(`_andBool_`(`_andBool_`(isProps(_29),isSet(S)),isInt(C)),isK(R)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(98) org.kframework.attributes.Location(Location(98,6,98,72)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #existRef(R,`_Set_`(`SetItem`(#br(_46,C1,R)),S),C)=>`_andBool_`(`_>=Int__INT`(C1,C),#token("true","Bool")) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(_46),isInt(C1)),isSet(S)),isInt(C)),isK(R)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(100) org.kframework.attributes.Location(Location(100,6,100,88)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #existRef(R,`_Set_`(`SetItem`(#br(_30,C1,R1)),S),C)=>#existRef(R,S,C) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(C1),isSet(S)),isInt(C)),isK(R)),isExp(R1)),isInt(_30)),`_=/=K__K-EQUAL`(R,R1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(101) org.kframework.attributes.Location(Location(101,6,102,24)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #checkInit(X,E,S)=>`_=/=K__K-EQUAL`(`Map:lookup`(S,`Map:lookup`(E,X)),`#uninit_OSL-SYNTAX`(.KList)) requires `_andBool_`(`_andBool_`(isId(X),isMap(E)),isMap(S)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(348) org.kframework.attributes.Location(Location(348,6,348,56)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowmutck(_25,`.Map`(.KList),_26,_27,_28)=>#token("false","Bool") requires `_andBool_`(`_andBool_`(`_andBool_`(isInt(_27),isInt(_26)),isInt(_28)),isInt(_25)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(340) org.kframework.attributes.Location(Location(340,6,340,42)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowmutck(L5,`_Map_`(`_|->_`(L,#br(_42,_43,#mutRef(L3))),M),L1,L2,L4)=>#borrowmutck(L5,M,L1,L2,L4) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(L4),isInt(_43)),isMap(M)),isInt(L2)),isInt(L3)),isInt(L)),isInt(_42)),isInt(L1)),isInt(L5)),`_=/=Int__INT`(L3,L4)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(322) org.kframework.attributes.Location(Location(322,6,324,27)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowmutck(L5,`_Map_`(`_|->_`(L,#br(BEG,END,#mutRef(L3))),M),L1,L2,L3)=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(END),isInt(BEG)),isMap(M)),isInt(L2)),isInt(L3)),isInt(L)),isInt(L1)),isInt(L5)),`_andBool_`(`_=/=Int__INT`(L5,L),`_==Bool__BOOL`(#lc(L1,L2,BEG,END),#token("true","Bool")))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(331) org.kframework.attributes.Location(Location(331,6,334,74)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowmutck(L5,`_Map_`(`_|->_`(L,#br(BEG,END,#mutRef(L3))),M),L1,L2,L3)=>#borrowmutck(L5,M,L1,L2,L3) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(END),isInt(BEG)),isMap(M)),isInt(L2)),isInt(L3)),isInt(L)),isInt(L1)),isInt(L5)),`_andBool_`(`_=/=Int__INT`(L5,L),`_==Bool__BOOL`(#lc(L1,L2,BEG,END),#token("false","Bool")))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(326) org.kframework.attributes.Location(Location(326,6,329,75)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowmutck(L5,`_Map_`(`_|->_`(L,#br(BEG,END,#immRef(L3))),M),L1,L2,L3)=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(END),isInt(BEG)),isMap(M)),isInt(L2)),isInt(L3)),isInt(L)),isInt(L1)),isInt(L5)),`_andBool_`(`_=/=Int__INT`(L5,L),`_==Bool__BOOL`(#lc(L1,L2,BEG,END),#token("true","Bool")))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(314) org.kframework.attributes.Location(Location(314,6,316,69)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowmutck(L5,`_Map_`(`_|->_`(L,#br(BEG,END,#immRef(L3))),M),L1,L2,L3)=>#borrowmutck(L5,M,L1,L2,L3) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(END),isInt(BEG)),isMap(M)),isInt(L2)),isInt(L3)),isInt(L)),isInt(L1)),isInt(L5)),`_andBool_`(`_=/=Int__INT`(L5,L),`_==Bool__BOOL`(#lc(L1,L2,BEG,END),#token("false","Bool")))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(310) org.kframework.attributes.Location(Location(310,6,312,70)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowmutck(L4,`_Map_`(`_|->_`(L,`#uninit_OSL-SYNTAX`(.KList)),M),L1,L2,L3)=>#borrowmutck(L4,M,L1,L2,L3) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(L4),isMap(M)),isInt(L2)),isInt(L3)),isInt(L)),isInt(L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(319) org.kframework.attributes.Location(Location(319,6,320,45)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowmutck(L4,`_Map_`(`_|->_`(L,#rs(_60)),M),L1,L2,L3)=>#borrowmutck(L4,M,L1,L2,L3) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isProps(_60),isInt(L4)),isMap(M)),isInt(L2)),isInt(L3)),isInt(L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(302) org.kframework.attributes.Location(Location(302,6,303,45)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowmutck(L4,`_Map_`(`_|->_`(L,#br(_70,_71,#immRef(L5))),M),L1,L2,L3)=>#borrowmutck(L4,M,L1,L2,L3) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(_70),isInt(L4)),isInt(_71)),isMap(M)),isInt(L2)),isInt(L3)),isInt(L1)),isInt(L5)),`_=/=Int__INT`(L5,L3)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(305) org.kframework.attributes.Location(Location(305,6,307,27)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowmutck(L,`_Map_`(`_|->_`(L,#br(_47,_48,_49)),M),L1,L2,L3)=>#borrowmutck(L,M,L1,L2,L3) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isExp(_49),isMap(M)),isInt(L2)),isInt(_47)),isInt(L3)),isInt(_48)),isInt(L)),isInt(L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(337) org.kframework.attributes.Location(Location(337,6,338,47)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowimmck(_61,`.Map`(.KList),_62,_63,_64)=>#token("false","Bool") requires `_andBool_`(`_andBool_`(`_andBool_`(isInt(_62),isInt(_63)),isInt(_64)),isInt(_61)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(297) org.kframework.attributes.Location(Location(297,6,297,42)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowimmck(L5,`_Map_`(`_|->_`(L,#br(_50,_51,#mutRef(L3))),M),L1,L2,L4)=>#borrowimmck(L5,M,L1,L2,L4) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(L4),isInt(_51)),isInt(_50)),isMap(M)),isInt(L2)),isInt(L3)),isInt(L)),isInt(L1)),isInt(L5)),`_=/=Int__INT`(L3,L4)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(279) org.kframework.attributes.Location(Location(279,6,281,27)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowimmck(L5,`_Map_`(`_|->_`(L,#br(BEG,END,#mutRef(L3))),M),L1,L2,L3)=>#token("true","Bool") requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(END),isInt(BEG)),isMap(M)),isInt(L2)),isInt(L3)),isInt(L)),isInt(L1)),isInt(L5)),`_andBool_`(`_=/=Int__INT`(L5,L),`_==Bool__BOOL`(#lc(L1,L2,BEG,END),#token("true","Bool")))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(287) org.kframework.attributes.Location(Location(287,6,289,74)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowimmck(L5,`_Map_`(`_|->_`(L,#br(BEG,END,#mutRef(L3))),M),L1,L2,L3)=>#borrowimmck(L5,M,L1,L2,L3) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(END),isInt(BEG)),isMap(M)),isInt(L2)),isInt(L3)),isInt(L)),isInt(L1)),isInt(L5)),`_andBool_`(`_=/=Int__INT`(L5,L),`_==Bool__BOOL`(#lc(L1,L2,BEG,END),#token("false","Bool")))) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(283) org.kframework.attributes.Location(Location(283,6,285,75)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowimmck(L4,`_Map_`(`_|->_`(L,`#uninit_OSL-SYNTAX`(.KList)),M),L1,L2,L3)=>#borrowimmck(L4,M,L1,L2,L3) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(L4),isMap(M)),isInt(L2)),isInt(L3)),isInt(L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(277) org.kframework.attributes.Location(Location(277,6,277,106)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowimmck(L4,`_Map_`(`_|->_`(L,#rs(_39)),M),L1,L2,L3)=>#borrowimmck(L4,M,L1,L2,L3) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(L4),isMap(M)),isInt(L2)),isInt(L3)),isInt(L1)),isProps(_39)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(275) org.kframework.attributes.Location(Location(275,6,275,105)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowimmck(L4,`_Map_`(`_|->_`(L,#br(_67,_68,#immRef(_69))),M),L1,L2,L3)=>#borrowimmck(L4,M,L1,L2,L3) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(L4),isInt(_69)),isInt(_68)),isMap(M)),isInt(_67)),isInt(L2)),isInt(L3)),isInt(L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(276) org.kframework.attributes.Location(Location(276,6,276,118)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  rule #borrowimmck(L,`_Map_`(`_|->_`(L,#br(BEG,END,#mutRef(L3))),M),L1,L2,L3)=>#borrowimmck(L,M,L1,L2,L3) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isInt(END),isInt(BEG)),isMap(M)),isInt(L2)),isInt(L3)),isInt(L)),isInt(L1)) ensures #token("true","Bool") [contentStartColumn(6) contentStartLine(292) org.kframework.attributes.Location(Location(292,6,293,47)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  ModuleComment(rule #wv(E:Exp . I:Int, ENV:Map) => #wv(E, ENV) . I,[org.kframework.attributes.Location(Location(68,1,68,54)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment(********************************************************,[org.kframework.attributes.Location(Location(343,1,343,60)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment(********************************************************,[org.kframework.attributes.Location(Location(300,1,300,60)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment(***************************************************************,[org.kframework.attributes.Location(Location(269,1,269,67)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment(************************ lvalue ******************************,[org.kframework.attributes.Location(Location(244,1,244,66)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( then the semantic will not be valid.,[org.kframework.attributes.Location(Location(400,1,400,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( return of a function,[org.kframework.attributes.Location(Location(132,1,132,24)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( return of a function,[org.kframework.attributes.Location(Location(125,1,125,24)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( of the same variable, lives in lifetimes that intersects.,[org.kframework.attributes.Location(Location(373,1,373,61)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( evaluate the expression: Transfer (call F) X,[org.kframework.attributes.Location(Location(41,1,41,48)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( With this rules, you can still use the deref on a borrow to get the owner.,[org.kframework.attributes.Location(Location(398,1,398,78)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( We check in another rules, if two mutable borrows,[org.kframework.attributes.Location(Location(372,1,372,53)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( Transfer an immutable reference into L.,[org.kframework.attributes.Location(Location(126,1,126,43)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( Transfer a resource to an owner,[org.kframework.attributes.Location(Location(113,1,113,35)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( Transfer a mutable reference into L,[org.kframework.attributes.Location(Location(133,1,133,39)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( This should not be a problem  because if we use the borrow later,,[org.kframework.attributes.Location(Location(399,1,399,69)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( Tansfer a resource through a mutable reference and let the mutref untouch,[org.kframework.attributes.Location(Location(120,1,120,77)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( Only mutable initialized variable can be "mutably" borrow (mborrow).,[org.kframework.attributes.Location(Location(371,1,371,72)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( Only an owner of a resource has the  authority to deallocate the resource.,[org.kframework.attributes.Location(Location(397,1,397,78)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( Only a variable declared with the Prop mut could be mutable borrowed.,[org.kframework.attributes.Location(Location(361,1,361,73)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( NOTE: It is not allow to transfer a resource through an immutable reference,[org.kframework.attributes.Location(Location(121,1,121,79)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( Cannot mborrow a voidTy and a reference.,[org.kframework.attributes.Location(Location(367,1,367,44)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( Can be see like mborrow an mborrowed L.,[org.kframework.attributes.Location(Location(134,1,134,43)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
  ModuleComment( Can be see like borrow a borrowed L.,[org.kframework.attributes.Location(Location(127,1,127,40)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))])
endmodule


module OSL$SYNTAX [org.kframework.attributes.Location(Location(9,1,404,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/./osl.k))]
  imports OSL-SYNTAX$SYNTAX
  imports CONTROL$SYNTAX
  imports CONFIGURATION$SYNTAX
  imports CALL$SYNTAX
  imports BLOCK$SYNTAX
  syntax WItem ::= "#writev" "(" Int "," Int ")"
  syntax Set ::= "#list2Set" "(" List ")"
  syntax OItem ::= "#borrowMutCK" "(" Int "," Int "," Int "," Int ")"
  syntax OItem ::= "#borrowImmCK" "(" Int "," Int "," Int "," Int ")"
  syntax OItem ::= "#Read" "(" K ")"
  syntax KItem ::= WItem
  syntax KItem ::= OItem
  syntax KItem ::= IndexItem
  syntax KItem ::= DItem
  syntax K
  syntax Int ::= "#wv" "(" Exp "," Map ")"
  syntax Int ::= "#unwrapVal" "(" K ")"
  syntax Int ::= "#unwrapInt" "(" K ")"
  syntax IndexItem ::= "#increaseTimer"
  syntax IndexItem ::= "#increaseIndex"
  syntax Exp ::= "#uninitialize" "(" Exp ")"
  syntax Exp ::= "#lvDref" "(" Exp ")"
  syntax Exp ::= "#TransferV" "(" Exp "," Exp ")"
  syntax Exp ::= "#TransferMB" "(" K "," K ")"
  syntax Exp ::= "#TransferIB" "(" K "," K ")"
  syntax Exp ::= "#Transfer" "(" Exp "," Exp ")"
  syntax DItem ::= "#Deallocate" "(" Exp ")"
  syntax Bool ::= "isWItem" "(" K ")"
  syntax Bool ::= "isOItem" "(" K ")"
  syntax Bool ::= "isIndexItem" "(" K ")"
  syntax Bool ::= "isDItem" "(" K ")"
  syntax Bool ::= "#writeCK" "(" Int "," Int "," Int "," Set ")"
  syntax Bool ::= "#lc" "(" Int "," Int "," Int "," Int ")"
  syntax Bool ::= "#isOwnerHasMutProp" "(" K ")"
  syntax Bool ::= "#inProps" "(" Prop "," Props ")"
  syntax Bool ::= "#existRef" "(" K "," Set "," Int ")"
  syntax Bool ::= "#checkInit" "(" Id "," Map "," Map ")"
  syntax Bool ::= "#borrowmutck" "(" Int "," Map "," Int "," Int "," Int ")"
  syntax Bool ::= "#borrowimmck" "(" Int "," Map "," Int "," Int "," Int ")"
  context `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(#lvDref(HOLE)~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isExp(HOLE)
  context `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(#TransferMB(HOLE,K1)~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isK(HOLE),isK(K1))
  context `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(#TransferIB(HOLE,K1)~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isK(HOLE),isK(K1))
  context `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(#Transfer(K0,HOLE)~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isExp(HOLE),isExp(K0))
  context `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(#Transfer(HOLE,K1)~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires `_andBool_`(isExp(HOLE),isExp(K1))
  context `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(#Read(HOLE)~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isK(HOLE)
  context `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(#Deallocate(HOLE)~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isExp(HOLE)
endmodule


module OSL-SYNTAX [org.kframework.attributes.Location(Location(3,1,108,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/osl-syntax.k))]
  imports OSL-SYNTAX$SYNTAX
  imports DOMAINS-SYNTAX
  imports DOMAINS
  ModuleComment(syntax OSL,[org.kframework.attributes.Location(Location(8,1,8,13)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/osl-syntax.k))])
  ModuleComment([klabel(#unsafe)],[org.kframework.attributes.Location(Location(55,43,55,62)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/osl-syntax.k))])
  ModuleComment(       ::= Stmts				[klabel(#osl)],[org.kframework.attributes.Location(Location(9,1,9,63)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/osl-syntax.k))])
endmodule


module OSL-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(3,1,108,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/model/osl-syntax.k))]
  imports DOMAINS-SYNTAX$SYNTAX
  imports DOMAINS$SYNTAX
  syntax Value ::= "#void"
  syntax Value ::= "#rs" "(" Props ")"
  syntax Value ::= "#ref" "(" Int ")"
  syntax Value ::= "#mutRef" "(" Int ")"
  syntax Value ::= "#loc" "(" Int ")"
  syntax Value ::= "#immRef" "(" Int ")"
  syntax Value ::= "#Loc" "(" Value "," Int ")"
  syntax Uninit ::= "#uninit"
  syntax Type ::= "#voidTy"
  syntax Type ::= "#ref" "(" Lifetime "," Type ")"
  syntax Type ::= "#own" "(" Props ")"
  syntax Stmts ::= Stmt "" Stmts
  syntax Stmts ::= ".Stmts"
  syntax Stmt ::= Function ";"
  syntax Stmt ::= Exp "mborrow" Exp ";"
  syntax Stmt ::= Exp "borrow" Exp ";"
  syntax Stmt ::= Exp ";"
  syntax Stmt ::= Block
  syntax Stmt ::= "val" "(" Exp ")"
  syntax Stmt ::= "unsafe" Block ";"
  syntax Stmt ::= "transfer" Exp Exp ";"
  syntax Stmt ::= "loop" Block ";"
  syntax Stmt ::= "destruct" Exp ";"
  syntax Stmt ::= "decl" Id ";"
  syntax Stmt ::= "decl" Id ":" Type ";"
  syntax Stmt ::= "debug"
  syntax Stmt ::= "deallocate" Exp ";"
  syntax Stmt ::= "@" Blocks ";"
  syntax Stmt ::= "!" Block ";"
  syntax Props ::= Prop "," Props
  syntax Props ::= ".Props"
  syntax Prop ::= "mut"
  syntax Prop ::= "copy"
  syntax Parameters ::= Parameter "," Parameters
  syntax Parameters ::= ".Parameters"
  syntax Parameter ::= Id ":" Type
  syntax Lifetime ::= Int
  syntax Lifetime ::= "'" Id
  syntax KItem ::= Value
  syntax KItem ::= Uninit
  syntax KItem ::= Type
  syntax KItem ::= Stmts
  syntax KItem ::= Stmt
  syntax KItem ::= Props
  syntax KItem ::= Prop
  syntax KItem ::= Parameters
  syntax KItem ::= Parameter
  syntax KItem ::= Lifetime
  syntax KItem ::= Function
  syntax KItem ::= Exps
  syntax KItem ::= Exp
  syntax KItem ::= BranchTmp
  syntax KItem ::= BorrowItem
  syntax KItem ::= Borrow
  syntax KItem ::= Blocks
  syntax KItem ::= Block
  syntax K
  syntax Int ::= "#cint" "(" Int "," Int ")"
  syntax Function ::= "fn" Id "(" Parameters ")" "->" Type Block
  syntax Exps ::= Exp "," Exps
  syntax Exps ::= ".Exps"
  syntax Exp ::= Value
  syntax Exp ::= Id
  syntax Exp ::= Exp "." Int
  syntax Exp ::= Borrow
  syntax Exp ::= "rd" "(" Exp ")"
  syntax Exp ::= "newResource" "(" Props ")"
  syntax Exp ::= "call" Id "(" Exps ")"
  syntax Exp ::= "*" Exp
  syntax Exp ::= "#lv" "(" Exp ")"
  syntax BranchTmp ::= "#secondBranch" "(" Blocks ")"
  syntax BorrowItem ::= "#br" "(" Int "," Int "," Exp ")"
  syntax Borrow ::= "&mut" Exp
  syntax Borrow ::= "&" Exp
  syntax Bool ::= "isValue" "(" K ")"
  syntax Bool ::= "isUninit" "(" K ")"
  syntax Bool ::= "isType" "(" K ")"
  syntax Bool ::= "isStmts" "(" K ")"
  syntax Bool ::= "isStmt" "(" K ")"
  syntax Bool ::= "isProps" "(" K ")"
  syntax Bool ::= "isProp" "(" K ")"
  syntax Bool ::= "isParameters" "(" K ")"
  syntax Bool ::= "isParameter" "(" K ")"
  syntax Bool ::= "isLifetime" "(" K ")"
  syntax Bool ::= "isFunction" "(" K ")"
  syntax Bool ::= "isExps" "(" K ")"
  syntax Bool ::= "isExp" "(" K ")"
  syntax Bool ::= "isBranchTmp" "(" K ")"
  syntax Bool ::= "isBorrowItem" "(" K ")"
  syntax Bool ::= "isBorrow" "(" K ")"
  syntax Bool ::= "isBlocks" "(" K ")"
  syntax Bool ::= "isBlock" "(" K ")"
  syntax Blocks ::= Block "," Blocks
  syntax Blocks ::= ".Blocks"
  syntax Block ::= "{" Stmts "}"
  context `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(val(HOLE)~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isExp(HOLE)
  context `<T>`(`<states>`(`_StateCellMap_`(`<state>`(_0,`<k>`(#expStmt(HOLE)~>DotVar3),_1,_2,_3,_4,_5,_6,_7),DotVar1)),_8,_9,_10) requires isExp(HOLE)
endmodule


module PROGRAM-LISTS [org.kframework.attributes.Location(Location(178,1,190,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports SORT-K
  imports PROGRAM-LISTS$SYNTAX
  ModuleComment( replaces the default productions for lists:,[org.kframework.attributes.Location(Location(181,3,181,49)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( into a series of productions more suitable for programs:,[org.kframework.attributes.Location(Location(184,3,184,62)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(180,3,180,58)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( Ne#Es ::= E "," Ne#Es     [klabel('_,_)],[org.kframework.attributes.Location(Location(186,3,186,46)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( Es#Terminator ::= ""      [klabel('.Es)],[org.kframework.attributes.Location(Location(185,3,185,46)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( Es ::= Ne#Es,[org.kframework.attributes.Location(Location(188,3,188,18)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( Es ::= E "," Es [userList("*"), klabel('_,_)],[org.kframework.attributes.Location(Location(182,3,182,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment(      | Es#Terminator      // if the list is *,[org.kframework.attributes.Location(Location(189,3,189,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment(      | ".Es"    [userList("*"), klabel('.Es)],[org.kframework.attributes.Location(Location(183,3,183,51)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment(         | E Es#Terminator [klabel('_,_)],[org.kframework.attributes.Location(Location(187,3,187,46)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
endmodule


module PROGRAM-LISTS$SYNTAX [org.kframework.attributes.Location(Location(178,1,190,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax K
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module RECORD-PRODUCTIONS [org.kframework.attributes.Location(Location(205,1,210,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS$SYNTAX
  ModuleComment( will be able to be parsed with don't-care variables according,[org.kframework.attributes.Location(Location(208,3,208,67)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( to their nonterminal's names,[org.kframework.attributes.Location(Location(209,3,209,34)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( syntax Sort ::= name(Args),[org.kframework.attributes.Location(Location(207,3,207,32)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, prefix productions of the form,[org.kframework.attributes.Location(Location(206,3,206,64)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
endmodule


module RECORD-PRODUCTIONS$SYNTAX [org.kframework.attributes.Location(Location(205,1,210,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
endmodule


module REQUIRES-ENSURES [org.kframework.attributes.Location(Location(129,1,138,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports REQUIRES-ENSURES$SYNTAX
  imports BASIC-K
endmodule


module REQUIRES-ENSURES$SYNTAX [org.kframework.attributes.Location(Location(129,1,138,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports BASIC-K$SYNTAX
  syntax RuleContent ::= K "when" K "ensures" K
  syntax RuleContent ::= K "when" K
  syntax RuleContent ::= K "requires" K "ensures" K
  syntax RuleContent ::= K "requires" K
  syntax RuleContent ::= K "ensures" K
  syntax RuleContent ::= K
  syntax K
  syntax Bool ::= "isRuleContent" "(" K ")"
endmodule


module RULE-CELLS [org.kframework.attributes.Location(Location(100,1,110,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports RULE-LISTS
  imports RULE-CELLS$SYNTAX
  imports KCELLS
  ModuleComment(syntax Cell ::= "<top>" #OptionalDots K #OptionalDots "</top>" [klabel(<top>)],[org.kframework.attributes.Location(Location(106,3,106,83)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(103,3,103,58)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( generates, for all productions that have the attribute 'cell' or 'maincell',,[org.kframework.attributes.Location(Location(104,3,104,82)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( a production like below:,[org.kframework.attributes.Location(Location(105,3,105,30)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
endmodule


module RULE-CELLS$SYNTAX [org.kframework.attributes.Location(Location(100,1,110,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  imports KCELLS$SYNTAX
  syntax K
  syntax Bool ::= "is#OptionalDots" "(" K ")"
  syntax #OptionalDots ::= "..."
  syntax #OptionalDots ::= ""
endmodule


module RULE-LISTS [org.kframework.attributes.Location(Location(192,1,197,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  ModuleComment( if this module is imported, the parser automatically,[org.kframework.attributes.Location(Location(193,3,193,58)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( adds the subsort production to the parsing module only:,[org.kframework.attributes.Location(Location(194,3,194,61)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
  ModuleComment( Es ::= E        [userList("*")],[org.kframework.attributes.Location(Location(195,3,195,37)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))])
endmodule


module RULE-LISTS$SYNTAX [org.kframework.attributes.Location(Location(192,1,197,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
endmodule


module SET [org.kframework.attributes.Location(Location(149,1,191,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports INT-SYNTAX
  imports BASIC-K
  ModuleComment(| ".",[org.kframework.attributes.Location(Location(162,16,162,23)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment(rule S:Set -Set .Set => S,[org.kframework.attributes.Location(Location(190,3,190,30)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment(rule S1:Set -Set (SetItem(K:K) S2:Set) => S1 -Set S2,[org.kframework.attributes.Location(Location(188,3,188,57)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment(requires notBool(K in S1),[org.kframework.attributes.Location(Location(189,3,189,30)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( set difference axioms ,[org.kframework.attributes.Location(Location(186,3,186,29)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( \section{Description} The Set represents a mathematical set (a collection
   of unique items). ,[org.kframework.attributes.Location(Location(155,3,156,23)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( TODO(AndreiS): remove this if not used,[org.kframework.attributes.Location(Location(187,3,187,44)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Get the intersection of two sets ($A \cap B$) ,[org.kframework.attributes.Location(Location(168,3,168,54)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Get the difference of two sets ($A \setminus B$),[org.kframework.attributes.Location(Location(171,3,171,56)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Get the cardinality of a set ($|A|$) ,[org.kframework.attributes.Location(Location(180,3,180,45)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Get an arbitrarily chosen element of the Set ,[org.kframework.attributes.Location(Location(183,3,183,53)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Construct an empty Set ,[org.kframework.attributes.Location(Location(160,3,160,31)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Construct a singleton Set (a Set with only one element $\{ a \}$). To add
   an element $a$ to a set $A$, construct the union of the singleton set
   $\{ a \}$ and $A$ ($\{ a \} \cup A$). ,[org.kframework.attributes.Location(Location(163,3,165,43)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Construct a new Set as the union of two different sets ($A \cup B$) ,[org.kframework.attributes.Location(Location(158,3,158,76)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Check set inclusion ($A \subseteq B$) ,[org.kframework.attributes.Location(Location(177,3,177,46)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Check element membership in a set ($a \in A$) ,[org.kframework.attributes.Location(Location(174,3,174,54)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
endmodule


module SET$SYNTAX [org.kframework.attributes.Location(Location(149,1,191,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _Set_
  syntax Set [hook(SET.Set) org.kframework.attributes.Location(Location(153,3,153,28)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax Set ::= Set Set
  syntax Set ::= Set "-Set" Set
  syntax Set ::= "intersectSet" "(" Set "," Set ")"
  syntax Set ::= "SetItem" "(" K ")"
  syntax Set ::= ".Set"
  syntax KItem ::= Set
  syntax K ::= "choice" "(" Set ")"
  syntax K
  syntax Int ::= "size" "(" Set ")"
  syntax Bool ::= Set "<=Set" Set
  syntax Bool ::= K "in" Set
  syntax Bool ::= "isSet" "(" K ")"
endmodule


module SORT-K [org.kframework.attributes.Location(Location(4,1,6,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax K
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module SORT-K$SYNTAX [org.kframework.attributes.Location(Location(4,1,6,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  syntax KItem ::= Bool
  syntax K [hook(K.K) org.kframework.attributes.Location(Location(5,3,5,22)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  syntax K
  syntax Bool ::= "isK" "(" K ")"
endmodule


module SORT-KBOTT [org.kframework.attributes.Location(Location(26,1,29,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  imports SORT-K
endmodule


module SORT-KBOTT$SYNTAX [org.kframework.attributes.Location(Location(26,1,29,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax KBott [org.kframework.attributes.Location(Location(28,3,28,14)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/kast.k))]
  syntax K
  syntax Bool ::= "isKBott" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module STDIN-STREAM [org.kframework.attributes.Location(Location(760,1,854,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
endmodule


module STDOUT-STREAM [org.kframework.attributes.Location(Location(856,1,924,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
endmodule


module STRING [org.kframework.attributes.Location(Location(477,1,554,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports STRING$SYNTAX
  imports K-EQUAL
  imports INT
  imports FLOAT-SYNTAX
  rule rfindChar(_13,#token("\"\"","String"),_14)=>#token("-1","Int") requires `_andBool_`(isInt(_14),isString(_13)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(533) org.kframework.attributes.Location(Location(533,8,533,33)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule rfindChar(S1,S2,I)=>`maxInt(_,_)_INT`(rfindString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),rfindChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I)) requires `_andBool_`(`_andBool_`(`_andBool_`(isString(S2),isString(S1)),isInt(I)),`_=/=String__STRING`(S2,#token("\"\"","String"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(532) org.kframework.attributes.Location(Location(532,8,532,182)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule findChar(_10,#token("\"\"","String"),_11)=>#token("-1","Int") requires `_andBool_`(isString(_10),isInt(_11)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(531) org.kframework.attributes.Location(Location(531,8,531,32)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule findChar(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL`(`_==Int_`(findString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),findChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I),`#if_#then_#else_#fi_K-EQUAL`(`_==Int_`(findChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I),#token("-1","Int")),findString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT`(findString(S1,substrString(S2,#token("0","Int"),#token("1","Int")),I),findChar(S1,substrString(S2,#token("1","Int"),lengthString(S2)),I)))) requires `_andBool_`(`_andBool_`(`_andBool_`(isString(S2),isString(S1)),isInt(I)),`_=/=String__STRING`(S2,#token("\"\"","String"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(530) org.kframework.attributes.Location(Location(530,8,530,431)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `replaceFirst(_,_,_)_STRING`(Source,ToReplace,_12)=>Source requires `_andBool_`(`_andBool_`(`_andBool_`(isString(_12),isString(Source)),isString(ToReplace)),`_<Int__INT`(findString(Source,ToReplace,#token("0","Int")),#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(543) org.kframework.attributes.Location(Location(543,8,544,57)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `replaceFirst(_,_,_)_STRING`(Source,ToReplace,Replacement)=>`_+String__STRING`(`_+String__STRING`(substrString(Source,#token("0","Int"),findString(Source,ToReplace,#token("0","Int"))),Replacement),substrString(Source,`_+Int__INT`(findString(Source,ToReplace,#token("0","Int")),lengthString(ToReplace)),lengthString(Source))) requires `_andBool_`(`_andBool_`(`_andBool_`(isString(Source),isString(Replacement)),isString(ToReplace)),`_>=Int__INT`(findString(Source,ToReplace,#token("0","Int")),#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(540) org.kframework.attributes.Location(Location(540,8,542,66)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `replaceAll(_,_,_)_STRING`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING`(Source,ToReplace)) requires `_andBool_`(`_andBool_`(isString(Source),isString(Replacement)),isString(ToReplace)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(552) org.kframework.attributes.Location(Location(552,8,552,154)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `replace(_,_,_,_)_STRING`(Source,_15,_16,#token("0","Int"))=>Source requires `_andBool_`(`_andBool_`(isString(_15),isString(Source)),isString(_16)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(551) org.kframework.attributes.Location(Location(551,8,551,49)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `replace(_,_,_,_)_STRING`(Source,ToReplace,Replacement,Count)=>`_+String__STRING`(`_+String__STRING`(substrString(Source,#token("0","Int"),findString(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING`(substrString(Source,`_+Int__INT`(findString(Source,ToReplace,#token("0","Int")),lengthString(ToReplace)),lengthString(Source)),ToReplace,Replacement,`_-Int__INT`(Count,#token("1","Int")))) requires `_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(isString(Source),isString(Replacement)),isInt(Count)),isString(ToReplace)),`_>Int__INT`(Count,#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(547) org.kframework.attributes.Location(Location(547,8,550,30)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `countAllOccurrences(_,_)_STRING`(Source,ToCount)=>`_+Int__INT`(#token("1","Int"),`countAllOccurrences(_,_)_STRING`(substrString(Source,`_+Int__INT`(findString(Source,ToCount,#token("0","Int")),lengthString(ToCount)),lengthString(Source)),ToCount)) requires `_andBool_`(`_andBool_`(isString(Source),isString(ToCount)),`_>=Int__INT`(findString(Source,ToCount,#token("0","Int")),#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(537) org.kframework.attributes.Location(Location(537,8,538,60)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `countAllOccurrences(_,_)_STRING`(Source,ToCount)=>#token("0","Int") requires `_andBool_`(`_andBool_`(isString(Source),isString(ToCount)),`_<Int__INT`(findString(Source,ToCount,#token("0","Int")),#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(535) org.kframework.attributes.Location(Location(535,8,536,59)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_>String__STRING`(S1,S2)=>`_<String__STRING`(S2,S1) requires `_andBool_`(isString(S2),isString(S1)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(527) org.kframework.attributes.Location(Location(527,8,527,52)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_>=String__STRING`(S1,S2)=>`notBool_`(`_<String__STRING`(S1,S2)) requires `_andBool_`(isString(S2),isString(S1)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(528) org.kframework.attributes.Location(Location(528,8,528,63)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_==String__STRING`(S1,S2)=>`_==K_`(S1,S2) requires `_andBool_`(isString(S2),isString(S1)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(514) org.kframework.attributes.Location(Location(514,8,514,49)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_=/=String__STRING`(S1,S2)=>`notBool_`(`_==String__STRING`(S1,S2)) requires `_andBool_`(isString(S2),isString(S1)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(513) org.kframework.attributes.Location(Location(513,8,513,65)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  rule `_<=String__STRING`(S1,S2)=>`notBool_`(`_<String__STRING`(S2,S1)) requires `_andBool_`(isString(S2),isString(S1)) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(526) org.kframework.attributes.Location(Location(526,8,526,63)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
endmodule


module STRING$SYNTAX [org.kframework.attributes.Location(Location(477,1,554,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  imports FLOAT-SYNTAX$SYNTAX
  syntax associativity left _==String__STRING
  syntax associativity left _=/=String__STRING
  syntax associativity left _+String__STRING
  syntax String ::= String "+String" String
  syntax String ::= "substrString" "(" String "," Int "," Int ")"
  syntax String ::= "replaceFirst" "(" String "," String "," String ")"
  syntax String ::= "replaceAll" "(" String "," String "," String ")"
  syntax String ::= "replace" "(" String "," String "," String "," Int ")"
  syntax String ::= "newUUID"
  syntax String ::= "directionalityChar" "(" String ")"
  syntax String ::= "chrChar" "(" Int ")"
  syntax String ::= "categoryChar" "(" String ")"
  syntax String ::= "Int2String" "(" Int ")"
  syntax String ::= "Float2String" "(" Float "," String ")"
  syntax String ::= "Float2String" "(" Float ")"
  syntax String ::= "Base2String" "(" Int "," Int ")"
  syntax KItem ::= "#parseToken" "(" String "," String ")"
  syntax Int ::= "rfindString" "(" String "," String "," Int ")"
  syntax Int ::= "rfindChar" "(" String "," String "," Int ")"
  syntax Int ::= "ordChar" "(" String ")"
  syntax Int ::= "lengthString" "(" String ")"
  syntax Int ::= "findString" "(" String "," String "," Int ")"
  syntax Int ::= "findChar" "(" String "," String "," Int ")"
  syntax Int ::= "countAllOccurrences" "(" String "," String ")"
  syntax Int ::= "String2Int" "(" String ")"
  syntax Int ::= "String2Base" "(" String "," Int ")"
  syntax Float ::= "String2Float" "(" String ")"
  syntax Bool ::= String ">String" String
  syntax Bool ::= String ">=String" String
  syntax Bool ::= String "==String" String
  syntax Bool ::= String "=/=String" String
  syntax Bool ::= String "<String" String
  syntax Bool ::= String "<=String" String
endmodule


module STRING-BUFFER$SYNTAX [org.kframework.attributes.Location(Location(578,1,581,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING-BUFFER-SYNTAX$SYNTAX
endmodule


module STRING-BUFFER-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(566,1,576,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k)) symbolic()]
  imports STRING-SYNTAX$SYNTAX
  imports STRING-BUFFER-SYNTAX$SYNTAX
  imports BOOL-SYNTAX$SYNTAX
  syntax StringBuffer ::= String
endmodule


module STRING-BUFFER-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(556,1,564,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _+String__STRING-BUFFER-SYNTAX
  syntax StringBuffer [hook(BUFFER.StringBuffer) org.kframework.attributes.Location(Location(560,3,560,49)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax StringBuffer ::= StringBuffer "+String" String
  syntax StringBuffer ::= ".StringBuffer"
  syntax String ::= "StringBuffer2String" "(" StringBuffer ")"
  syntax KItem ::= StringBuffer
  syntax K
  syntax Bool ::= "isStringBuffer" "(" K ")"
endmodule


module STRING-SYNTAX [org.kframework.attributes.Location(Location(464,1,475,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
  ModuleComment( StringChar ::= ~[\"\n\r\\] // anything except for Newline, DoubleQuote and Backslash,[org.kframework.attributes.Location(Location(467,3,467,90)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( DoubleQuote StringChar* DoubleQuote,[org.kframework.attributes.Location(Location(466,3,466,41)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment( Double Quoted Strings are of the form:,[org.kframework.attributes.Location(Location(465,3,465,44)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][x] 2*Hex // "\xFF"       Backslash 'x' followed by two   hexadecimal characters,[org.kframework.attributes.Location(Location(469,3,469,105)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][u] 4*Hex // "\uFFFF"     Backslash 'u' followed by four  hexadecimal characters,[org.kframework.attributes.Location(Location(470,3,470,105)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][nrtf\"\\] // Backslash followed by either 'nrtf', DoubleQuote or Backslash,[org.kframework.attributes.Location(Location(468,3,468,100)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment(              | [\\][U] 8*Hex // "\UFFffFFff" Backslash 'U' followed by eight hexadecimal characters,[org.kframework.attributes.Location(Location(471,3,471,105)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
  ModuleComment(                              // the code must not be in the range [0xdfff, 0xd800] or exceed 0x10ffff,[org.kframework.attributes.Location(Location(472,3,472,107)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))])
endmodule


module STRING-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(464,1,475,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax String [hook(STRING.String) org.kframework.attributes.Location(Location(473,3,473,37)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax String ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]"
  syntax KItem ::= String
  syntax KItem ::= Bool
  syntax K
  syntax Bool ::= "isString" "(" K ")"
endmodule


module UNSIGNED-INT-SYNTAX [org.kframework.attributes.Location(Location(319,1,322,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  syntax K
  syntax Bool ::= "isK" "(" K ")"
  syntax Bool ::= "isBool" "(" K ")"
endmodule


module UNSIGNED-INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(319,1,322,9)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax KItem ::= Int
  syntax KItem ::= Bool
  syntax K
  syntax Int [hook(INT.Int) org.kframework.attributes.Location(Location(320,3,320,28)) org.kframework.attributes.Source(Source(/home/alessio/Project/osl2/k/include/builtin/domains.k))]
  syntax Int ::= r"[0-9]+"
  syntax Bool ::= "isInt" "(" K ")"
endmodule